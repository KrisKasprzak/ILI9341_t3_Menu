/*

  example in how to implement the ili9341_t3_menu library. This is an example that
  uses both menu types
  1) a simple selection menu (ItemMenu) where the user can scroll up/down and select
  an item and some action be performed such as drawing a screen or activating a sub menu
  2) an menu with in-line where the user can scroll up/down the list and select an item
  however the difference is that move/up down on a selected item will scroll the values of that
  menu item and NOT scroll the list, selecing a selected item will restor control to moving up/down
  3) a EditMenu menu with in-line an no icons (down and dirty)

  highlights
  1. menu items exceeds screen size but library handles wrapping
  2. each item selection has a range, increment and decimal readout
  3. items can also be read from a char array

*/

// required libraries
#include "ILI9341_t3_Menu.h"  // custom utilities definition
#include "ILI9341_t3.h"       // high speed display that ships with Teensy
#include "font_Arial.h"       // custom fonts that ships with ILI9341_t3.h
#include <font_ArialBold.h>
#include <ILI9341_t3_Controls.h>
// this library supports both touch and mechanical (encoder or buttons)
#include <Encoder.h>
#include <XPT2046_Touchscreen.h>

// pins for LED and select button on encoder
#define SE_PIN A2
#define EN1_PIN A0
#define EN2_PIN A1

#define ROW_HEIGHT 35
#define ROWS 5
#define DATA_COLUMN 190

// pins for LED and select button on encoder
#define LED_PIN A9
#define CS_PIN 10
#define DC_PIN 9
#define T_CS 0
#define T_IRQ 1

// easy way to include fonts but change globally
#define FONT_SMALL Arial_16           // font for menus
#define FONT_EDITTITLE Arial_18_Bold  // font for menus
#define FONT_ITEM Arial_16            // font for menus
#define FONT_TITLE Arial_24_Bold      // font for all headings

#define DEBOUNCE 60

int MenuOption = 0;
int AllowColorMenu = 0;
long Position = 0, oldPosition = 0;
// global x y for touch stuff
int BtnX, BtnY;
uint16_t Bits = 0;
float Volts = 0.0;
byte Decimals = 2;
byte Refresh = 1;

// must have variables for each menu item
// best to have these global so you can use them in processing functions
int MenuOption1 = 0, MenuOption2 = 0, MenuOption3 = 0, MenuOption4 = 0, MenuOption5 = 0;

int OptionOption1 = 0, OptionOption2 = 0, OptionOption3 = 0, OptionOption4 = 0, OptionOption5 = 0;
int OptionOption6 = 0, OptionOption7 = 0, OptionOption8 = 0, OptionOption9 = 0;

int ColorOption1 = 0, ColorOption2 = 0, ColorOption3 = 0, ColorOption4 = 0, ColorOption5 = 0;
int ColorOption6 = 0, ColorOption7 = 0, ColorOption8 = 0, ColorOption9 = 0, ColorOption10 = 0;
int ColorOption11 = 0, ColorOption12 = 0;

int WirelessOption1 = 0, WirelessOption2 = 0, WirelessOption3 = 0, WirelessOption4 = 0, WirelessOption5 = 0;
int WirelessOption6 = 0, WirelessOption7 = 0, WirelessOption8 = 0, WirelessOption9 = 0;
int WirelessOption10 = 0, WirelessOption11 = 0, WirelessOption12 = 0, WirelessOption13 = 0;

float Temp1Adj = 0.2, Temp2Adj = -.3, AlarmVal = 1;

// create some selectable menu sub-items, these are lists inside a menu item
const char *ReadoutItems[] = { "Absolute", "Deg F", "Deg C" };
const char *RefreshItems[] = { "10 ms", "50 ms", "100 ms", "500 ms", "1 second" };
uint16_t RefreshTimeList[] = { 10, 50, 100, 500, 1000 };
const char *PrecisionItems[] = { "0", "0.0", "0.00", "0.000" };
const char *TuneItems[] = { "Slope/Offset", "Simple", "Linear", "2nd order ", "3rd order", "Log" };
const char *OffOnItems[] = { "Off", "On" };
uint16_t RefreshTime = RefreshTimeList[Refresh];
const char *DataRateItems[] = { "300 baud", "1.2 kbd", "2.4 kbd", "4.8 kbd", "9.6 kbd", "19.2 kbd", "56 kbd" };

const char *C_NAMES[] = {
  "Black", "Navy", "Dark Green", "Dark Cyan", "Maroon",
  "Purple", "Olive", "Light Grey", "Dark Grey", "Blue",
  "Green", "Cyan", "Red", "Magenta", "Yellow",
  "White", "Orange", "Green Yellow", "Pink"
};


const uint16_t C_VALUES[] = {
  ILI9341_BLACK, ILI9341_NAVY, ILI9341_DARKGREEN, ILI9341_DARKCYAN, ILI9341_MAROON,
  ILI9341_PURPLE, ILI9341_OLIVE, ILI9341_LIGHTGREY, ILI9341_DARKGREY, ILI9341_BLUE,
  ILI9341_GREEN, ILI9341_CYAN, ILI9341_RED, ILI9341_MAGENTA, ILI9341_YELLOW, ILI9341_WHITE,
  ILI9341_ORANGE, ILI9341_GREENYELLOW, ILI9341_PINK
};

// set default colors
uint16_t MENU_TEXT = ILI9341_BLACK;
uint16_t MENU_BACKGROUND = ILI9341_WHITE;     // white
uint16_t MENU_HIGHLIGHTTEXT = ILI9341_WHITE;  // white
uint16_t MENU_HIGHLIGHT = ILI9341_ORANGE;     // orange
uint16_t MENU_HIGHBORDER = ILI9341_GREENYELLOW;
uint16_t MENU_SELECTTEXT = ILI9341_WHITE;  // white
uint16_t MENU_SELECT = ILI9341_RED;        // red
uint16_t MENU_SELECTBORDER = ILI9341_MAROON;
uint16_t MENU_DISABLE = ILI9341_LIGHTGREY;
uint16_t TITLE_TEXT = ILI9341_WHITE;  // white
uint16_t TITLE_BACK = ILI9341_NAVY;   // navy

uint16_t VOLT_TEXT = ILI9341_BLACK;
bool ShowUOM = false;

// this next rediciously long section is merely the icon image data
// scroll down to 1540 or so for the actual code

// Website for generating icons
// https://javl.github.io/image2cpp/

// all icons created at that site and copy / pasted here
// '64_wireless', 64x64px
const uint16_t epd_bitmap_64_wireless[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7df, 0xefdf, 0xefdf, 0xe7df, 0xe7df, 0xe7df,
  0xe7df, 0xefdf, 0xefdf, 0xf7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xe7df, 0xd7bf, 0xcf9f, 0xbf7f, 0xb77f, 0xa75f, 0xa75f, 0xa75f, 0xa75f,
  0xa75f, 0xa75f, 0xb77f, 0xbf7f, 0xcf9f, 0xd7bf, 0xe7df, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xd79f, 0xbf7f, 0xa75f, 0xaf7f, 0xcfbf, 0xe7df, 0xcfbf, 0xbf9f, 0xbf7f, 0xb77f, 0xb77f,
  0xbf7f, 0xbf9f, 0xcfbf, 0xe7df, 0xcfbf, 0xaf7f, 0xa75f, 0xbf7f, 0xd79f, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xf7ff, 0xdfbf, 0xc79f, 0xaf5f, 0xb77f, 0xdfdf, 0xb77f, 0xa75f, 0xaf5f, 0xbf7f, 0xcf9f, 0xcf9f, 0xd7bf, 0xd7bf, 0xd7bf,
  0xd7bf, 0xcf9f, 0xcf9f, 0xbf7f, 0xaf5f, 0xa75f, 0xb77f, 0xdfdf, 0xb77f, 0xaf5f, 0xc79f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff,
  0xe7df, 0xc79f, 0xa75f, 0xcfbf, 0xbf9f, 0xa75f, 0xbf7f, 0xd79f, 0xdfbf, 0xefdf, 0xf7df, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xf7ff, 0xf7ff, 0xf7df, 0xefdf, 0xdfbf, 0xd79f, 0xbf7f, 0xa75f, 0xbf9f, 0xcfbf, 0xa75f, 0xc79f, 0xe7df, 0xf7ff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf,
  0xaf5f, 0xc79f, 0xb77f, 0xaf5f, 0xcf9f, 0xe7bf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xe7bf, 0xcf9f, 0xaf5f, 0xb77f, 0xc79f, 0xaf5f, 0xd7bf, 0xefdf,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xc79f, 0xaf7f,
  0xc7bf, 0xaf5f, 0xcf9f, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7df, 0xefdf, 0xe7df, 0xe7bf, 0xe7bf, 0xe7bf,
  0xe7bf, 0xe7df, 0xefdf, 0xf7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xcf9f, 0xaf5f, 0xc7bf, 0xaf7f, 0xc79f,
  0xe7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xb77f, 0xbf9f, 0xaf5f,
  0xc79f, 0xe7bf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xdfbf, 0xcf9f, 0xc77f, 0xb77f, 0xa75f, 0xa75f, 0xa75f, 0xa75f,
  0xa75f, 0xa75f, 0xb77f, 0xc77f, 0xd79f, 0xdfbf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7bf, 0xc79f, 0xaf5f, 0xbf9f,
  0xb77f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xaf5f, 0xc7bf, 0xa75f, 0xd7bf,
  0xefdf, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xd79f, 0xbf7f, 0xa75f, 0xb77f, 0xc7bf, 0xbf9f, 0xaf5f, 0xa75f, 0xa75f, 0xa75f,
  0xa75f, 0xaf5f, 0xbf9f, 0xc7bf, 0xb77f, 0xa75f, 0xbf7f, 0xd79f, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xa75f,
  0xc7bf, 0xaf5f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xaf5f, 0xc7bf, 0xb77f, 0xdfbf, 0xf7ff,
  0xffff, 0xffff, 0xf7ff, 0xe7df, 0xcf9f, 0xaf5f, 0xaf7f, 0xbf9f, 0xa75f, 0xaf5f, 0xbf7f, 0xcf9f, 0xd7bf, 0xd7bf, 0xdfbf, 0xdfbf,
  0xd7bf, 0xd7bf, 0xcf9f, 0xbf7f, 0xaf5f, 0xa75f, 0xbf9f, 0xaf7f, 0xaf5f, 0xcf9f, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xdfbf,
  0xb77f, 0xc7bf, 0xaf5f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7bf, 0xaf5f, 0xbfbf, 0xb77f, 0xe7bf, 0xf7ff, 0xffff,
  0xffff, 0xf7df, 0xdfbf, 0xb77f, 0xaf7f, 0xb77f, 0xa75f, 0xc77f, 0xd7bf, 0xe7df, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7ff, 0xefdf, 0xe7df, 0xd7bf, 0xc77f, 0xa75f, 0xb77f, 0xaf7f, 0xb77f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xf7ff,
  0xe7bf, 0xb77f, 0xbfbf, 0xaf5f, 0xe7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xb77f, 0xbfbf, 0xb77f, 0xe7df, 0xffff, 0xffff, 0xffff,
  0xefdf, 0xcf9f, 0xa75f, 0xbf9f, 0xa75f, 0xc79f, 0xe7bf, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xe7bf, 0xc79f, 0xa75f, 0xbf9f, 0xa75f, 0xcf9f, 0xefdf, 0xffff, 0xffff,
  0xffff, 0xe7df, 0xb77f, 0xbfbf, 0xb77f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xbf9f, 0xb75f, 0xe7bf, 0xffff, 0xffff, 0xffff, 0xefdf,
  0xc79f, 0xaf5f, 0xa75f, 0xbf7f, 0xdfbf, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xe7df, 0xe7bf, 0xe7bf,
  0xe7df, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xdfbf, 0xbf7f, 0xa75f, 0xaf5f, 0xc79f, 0xefdf, 0xffff,
  0xffff, 0xffff, 0xe7bf, 0xaf5f, 0xbf9f, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xaf7f, 0xa75f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xc79f,
  0xaf7f, 0xa75f, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xdfbf, 0xcf9f, 0xbf7f, 0xaf5f, 0xa75f, 0xa75f, 0xa75f,
  0xa75f, 0xaf5f, 0xbf7f, 0xcf9f, 0xdfbf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xa75f, 0xaf7f, 0xc79f, 0xefdf,
  0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xa75f, 0xaf7f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xb75f, 0xaf7f, 0xd79f, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xaf7f,
  0xa75f, 0xd7bf, 0xf7df, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xbf7f, 0xa75f, 0xb77f, 0xbf9f, 0xaf7f, 0xa75f, 0xa75f, 0xa75f,
  0xa75f, 0xaf7f, 0xbf9f, 0xb77f, 0xa75f, 0xbf7f, 0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xf7df, 0xd7bf, 0xa75f, 0xaf7f, 0xc79f,
  0xefdf, 0xffff, 0xffff, 0xf7ff, 0xd79f, 0xaf7f, 0xb75f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xb79f, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xa75f, 0xa75f,
  0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xe7bf, 0xc77f, 0xa75f, 0xbf9f, 0xa75f, 0xaf5f, 0xc77f, 0xcf9f, 0xd7bf, 0xdfbf, 0xdfbf,
  0xd7bf, 0xcf9f, 0xc77f, 0xaf5f, 0xa75f, 0xbf9f, 0xa75f, 0xc77f, 0xe7bf, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xa75f, 0xa75f,
  0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xb79f, 0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xaf5f, 0xa75f, 0xdfbf, 0xffff, 0xffff, 0xffff, 0xdfbf, 0xa75f, 0xa75f, 0xd79f,
  0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xaf5f, 0xb79f, 0xa75f, 0xbf7f, 0xd7bf, 0xe7df, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xf7ff, 0xf7ff, 0xe7df, 0xd7bf, 0xbf7f, 0xa75f, 0xb79f, 0xaf5f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xd79f, 0xa75f,
  0xa75f, 0xdfbf, 0xffff, 0xffff, 0xffff, 0xdfbf, 0xa75f, 0xaf5f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xb79f, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xaf7f, 0xcf9f, 0xefdf,
  0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xa75f, 0xb77f, 0xb75f, 0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xb75f, 0xb77f, 0xa75f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xcf9f,
  0xaf7f, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xb79f, 0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xaf7f, 0xaf5f, 0xdfbf, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xaf7f, 0xbf7f, 0xe7df, 0xffff,
  0xffff, 0xf7ff, 0xdfbf, 0xaf5f, 0xaf7f, 0xbf7f, 0xe7bf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xe7df, 0xe7df,
  0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7bf, 0xbf7f, 0xaf7f, 0xaf5f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xe7df,
  0xbf7f, 0xaf7f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xdfbf, 0xaf5f, 0xaf7f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xdfbf, 0xb77f, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xb77f, 0xaf5f, 0xdfbf, 0xf7ff, 0xffff,
  0xffff, 0xe7df, 0xb77f, 0xaf7f, 0xc79f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xd7bf, 0xc77f, 0xb75f, 0xa75f, 0xa75f,
  0xb75f, 0xc77f, 0xd7bf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xc79f, 0xaf7f, 0xb77f, 0xe7df, 0xffff, 0xffff, 0xf7ff,
  0xdfbf, 0xaf5f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xb77f, 0xdfbf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf7df, 0xcf9f, 0xb77f, 0xdfbf, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xaf7f, 0xc79f, 0xefdf, 0xffff, 0xffff,
  0xefdf, 0xcf9f, 0xaf7f, 0xbf7f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xb77f, 0xb77f, 0xcfbf, 0xbf7f, 0xaf5f, 0xaf5f,
  0xbf7f, 0xcfbf, 0xb77f, 0xb77f, 0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xe7df, 0xbf7f, 0xaf7f, 0xcf9f, 0xefdf, 0xffff, 0xffff,
  0xefdf, 0xc79f, 0xaf7f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xdfbf, 0xb77f, 0xcf9f, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xefdf, 0xaf7f, 0xaf7f, 0xe7df, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xaf7f, 0xdfbf, 0xffff, 0xffff, 0xffff,
  0xdfbf, 0xaf5f, 0xaf5f, 0xdfbf, 0xffff, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xa75f, 0xbf9f, 0xa75f, 0xbf7f, 0xcf9f, 0xd79f, 0xd79f,
  0xcf9f, 0xbf7f, 0xa75f, 0xbf9f, 0xa75f, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xdfbf, 0xaf5f, 0xaf5f, 0xdfbf, 0xffff, 0xffff,
  0xffff, 0xdfbf, 0xaf7f, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xe7df, 0xaf7f, 0xaf7f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xdfbf, 0xaf7f, 0xcf9f, 0xf7df, 0xffff, 0xffff, 0xe7df, 0xaf5f, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xefdf,
  0xc79f, 0xaf7f, 0xd79f, 0xf7ff, 0xffff, 0xffff, 0xf7df, 0xcf9f, 0xaf7f, 0xa75f, 0xc79f, 0xdfbf, 0xefdf, 0xf7ff, 0xffff, 0xffff,
  0xf7ff, 0xefdf, 0xdfbf, 0xc79f, 0xa75f, 0xaf7f, 0xcf9f, 0xf7df, 0xffff, 0xffff, 0xf7ff, 0xd79f, 0xaf7f, 0xc79f, 0xefdf, 0xffff,
  0xffff, 0xefdf, 0xbf7f, 0xaf5f, 0xe7df, 0xffff, 0xffff, 0xf7df, 0xcf9f, 0xaf7f, 0xdfbf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xb77f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xdfbf, 0xaf7f, 0xd79f, 0xf7ff, 0xffff, 0xffff, 0xe7bf,
  0xaf5f, 0xb77f, 0xe7df, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xa75f, 0xa75f, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xa75f, 0xa75f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xe7df, 0xb77f, 0xaf5f, 0xe7bf, 0xffff,
  0xffff, 0xf7ff, 0xd79f, 0xaf7f, 0xdfbf, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xb77f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7ff, 0xd79f, 0xaf7f, 0xe7bf, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xb77f, 0xdfbf, 0xffff, 0xffff, 0xf7ff, 0xd7bf,
  0xaf7f, 0xd79f, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xaf7f, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xaf7f, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xd79f, 0xaf7f, 0xd7bf, 0xf7ff,
  0xffff, 0xffff, 0xdfbf, 0xb77f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xe7bf, 0xaf7f, 0xd79f, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7df, 0xc79f, 0xaf7f, 0xe7df, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xb77f, 0xe7df, 0xffff, 0xffff, 0xf7df, 0xcf9f,
  0xaf7f, 0xdfbf, 0xffff, 0xffff, 0xffff, 0xdfbf, 0xaf7f, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xaf7f, 0xdfbf, 0xffff, 0xffff, 0xffff, 0xdfbf, 0xaf7f, 0xcf9f, 0xf7df,
  0xffff, 0xffff, 0xe7df, 0xb77f, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xe7df, 0xaf7f, 0xc79f, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xefdf, 0xb77f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xbf7f,
  0xbf7f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xd79f, 0xaf7f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdefc, 0xa535, 0x636e,
  0xb5d7, 0xffdf, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xaf7f, 0xd79f, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xbf7f, 0xefdf,
  0xffff, 0xffff, 0xefdf, 0xc79f, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xb77f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xefdf, 0xb77f, 0xc79f, 0xf7df, 0xffff, 0xffff, 0xefdf, 0xb77f, 0xd79f, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xb77f,
  0xcf9f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xb77f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6bb, 0xf77e, 0xef7e, 0x9d76,
  0x8c92, 0xce9a, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xb77f, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xb77f, 0xefdf,
  0xffff, 0xffff, 0xf7df, 0xd79f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xefdf, 0xb77f, 0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xbf9f,
  0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xb77f, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd4, 0xd69b, 0xf79e, 0x9d14,
  0x6b8e, 0xc659, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xbf9f, 0xefdf,
  0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xefdf, 0xb77f, 0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xc79f,
  0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xb77f, 0xd7bf, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xd7bf, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xc79f, 0xefdf,
  0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xefdf, 0xb77f, 0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xc79f,
  0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xd79f, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xd79f, 0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xc79f, 0xefdf,
  0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xb77f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xefdf, 0xbf7f, 0xc79f, 0xf7df, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xf7df, 0xcf9f,
  0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xcf9f, 0xf7df,
  0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xf7df, 0xc79f, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xd7bf, 0xd79f, 0xf7df, 0xffff, 0xffff, 0xf7ff, 0xdfbf,
  0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xdfbf, 0xf7ff,
  0xffff, 0xffff, 0xf7df, 0xd79f, 0xd7bf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xe7df,
  0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xe7df, 0xffff,
  0xffff, 0xffff, 0xefdf, 0xcf9f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xe7bf, 0xbf7f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xe7df, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xefdf,
  0xdfbf, 0xe7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xefdf, 0xf7df, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xf7df, 0xefdf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xdfbf, 0xefdf, 0xffff,
  0xffff, 0xffff, 0xefdf, 0xcf9f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xefdf, 0xbf7f, 0xe7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xefdf, 0xbf9f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xefdf, 0xdfbf, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xf7ff,
  0xe7df, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xe7df, 0xf7ff, 0xffff,
  0xffff, 0xf7ff, 0xe7df, 0xdfbf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xe7df, 0xbf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xe7bf, 0xdfbf, 0xf7df, 0xffff, 0xffff, 0xffff,
  0xefdf, 0xe7df, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xe7df, 0xefdf, 0xffff, 0xffff,
  0xffff, 0xf7df, 0xdfbf, 0xe7bf, 0xf7ff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xefdf, 0xdfbf, 0xefdf, 0xffff, 0xffff, 0xffff,
  0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff,
  0xffff, 0xefdf, 0xdfbf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xe7df, 0xf7ff, 0xffff, 0xffff,
  0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff,
  0xf7ff, 0xe7df, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xc79f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xcf9f, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xe7df, 0xefdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7ff, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xefdf, 0xe7df, 0xefdf, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xcf9f, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7df, 0xcf9f, 0xefdf, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff,
  0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xcf9f, 0xe7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xd7bf, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xefdf, 0xefdf, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf,
  0xefdf, 0xf7df, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xd7bf, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xefdf, 0xf7ff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf,
  0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xd7bf, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xdfbf, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xefdf,
  0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xf7df,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xdfbf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xe7df, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff,
  0xf7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7df, 0xf7ff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xe7df, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefdf, 0xe7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf7ff, 0xe7df, 0xefdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xf7ff, 0xefdf, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xefdf, 0xf7df, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xf7df, 0xefdf, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff,
  0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff,
  0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xf79e, 0xef5d, 0xe71c, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xe71c, 0xef5d, 0xf79e, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xefbe, 0xdf1d, 0xd6dc, 0xce7a, 0xce5a, 0xce5a, 0xce5a, 0xce5a, 0xce5a, 0x8c73, 0xce5a, 0xf79e, 0xa555,
  0x636e, 0xc639, 0xce5a, 0xce5a, 0xce5a, 0xce5a, 0xce5a, 0xce7a, 0xd6dc, 0xe73d, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xc65a, 0xd6db, 0xd6dc, 0xd6dc, 0xd6dc, 0xd6dc, 0xd6dc, 0xd6dc, 0xd6dc, 0x9cf5, 0xc5f8, 0xef3d, 0xa535,
  0x6baf, 0xc638, 0xd6fc, 0xd6fc, 0xd6fc, 0xd6dc, 0xd6dc, 0xd6dc, 0xd6dc, 0xd6dc, 0xd6fc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xa536, 0x9cf5, 0x9cf5, 0xb597, 0xc619, 0xd67a, 0xdedb, 0xe6fc, 0xe71d, 0xbdd8, 0xd69b, 0xf77e, 0xbdd8,
  0x94d3, 0xc639, 0xb5b7, 0xb5b7, 0xb597, 0xad96, 0xb5b7, 0xbdf8, 0xc659, 0xd69a, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0x9d16, 0x9cd5, 0x9494, 0x9cd4, 0xad56, 0xc5f9, 0xd69b, 0xef3d, 0xffbf, 0xffbf, 0xf79e, 0xef7e, 0xef5d,
  0xe73d, 0x9d35, 0x29c8, 0x3a49, 0x5b0c, 0x73cf, 0x8c92, 0xad55, 0xc618, 0xd69a, 0xd6ba, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xc619, 0x9cd4, 0x8432, 0x8432, 0x9cd4, 0xb5b7, 0xd69b, 0xef3d, 0xffbf, 0xffbf, 0xf79e, 0xef7e, 0xef5d,
  0xe73d, 0x9d15, 0x29c8, 0x3a49, 0x530c, 0x6bae, 0x8430, 0x94b3, 0xad55, 0xbdf7, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xef7e, 0xdefc, 0xd69a, 0xce5a, 0xce59, 0xce59, 0xce59, 0xce7a, 0xd6ba, 0xd6ba, 0xd69a, 0xd67a, 0xce79,
  0xce59, 0xa514, 0x634d, 0x6bae, 0x8451, 0xa534, 0xbdf7, 0xd69a, 0xe73c, 0xef7d, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf,
  0xffdf, 0xe75d, 0xce7a, 0xd6ba, 0xdefc, 0xef5d, 0xef9e, 0xf7be, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'Alarm', 32x32px
const uint16_t epd_bitmap_Alarm[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x5b2e,
  0x4acd, 0x5b2e, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe75d, 0x52ed, 0x9536,
  0xadd9, 0x4acd, 0xce7a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdf8, 0x5b4f, 0x9d77, 0x5b2e,
  0xa5b8, 0x4aac, 0xc659, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8472, 0x6bd1, 0x9d57, 0x5b2e, 0x52ed,
  0xa5b8, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x5b2e, 0x8494, 0x8cd5, 0x6390, 0x636f, 0x5b4f,
  0xa5b8, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0x1bd8, 0x3439, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe75d, 0x52ed, 0x9536, 0x84b4, 0x63b0, 0x6bb0, 0x6bb0, 0x6390,
  0xa5b8, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xffff, 0xffff, 0xf7be, 0xdefb, 0x1398, 0x1398, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdf8, 0x5b2e, 0x9d77, 0x8494, 0x6bd1, 0x6bf1, 0x73f1, 0x6bf1, 0x6bd1,
  0xa5b8, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xf7be, 0x1bd8, 0x9dfb, 0xe71c, 0xce79, 0x3418, 0x4c99, 0xffdf, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8472, 0x6bd1, 0x9d77, 0x7c73, 0x7412, 0x7432, 0x7432, 0x7432, 0x7432, 0x7412,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xef7d, 0x64f9, 0x0b77, 0x64fa, 0xe71c, 0xd69a, 0x1398, 0xa63b, 0xffff, 0xffff, 0xffff,
  0xedce, 0xece6, 0xece6, 0xcc67, 0x3a8d, 0x428c, 0x8473, 0x9d57, 0x7c73, 0x7c53, 0x7c73, 0x7c73, 0x7c73, 0x7c73, 0x7c73, 0x7c53,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xf79e, 0xdedb, 0xa5d9, 0x0b77, 0x95db, 0xe73c, 0xa5f9, 0x0b77, 0xf7be, 0xffff, 0xffff,
  0xece6, 0xfffb, 0xfffa, 0xfffa, 0x9558, 0x9d78, 0x9536, 0x8494, 0x8494, 0x8494, 0x8494, 0x8494, 0x8494, 0x8494, 0x8494, 0x8494,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xcefd, 0x23d8, 0xcedc, 0xdedb, 0x9599, 0x0b77, 0xef7d, 0xdefb, 0x1398, 0xa61b, 0xffff, 0xffff,
  0xece6, 0xffd9, 0xedc6, 0xf5e6, 0x84b6, 0x8cd5, 0x8cd5, 0x8cd5, 0x8cd5, 0x8cd5, 0x8cd5, 0x8cd5, 0x8cd5, 0x8cd5, 0x8cd5, 0x8cd5,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xef5d, 0x3438, 0x0b77, 0xef7d, 0xdedb, 0x23d8, 0x857a, 0xe73c, 0x64d8, 0x4478, 0xffdf, 0xffff,
  0xece6, 0xffd8, 0xf649, 0xfe69, 0x8cf7, 0x9516, 0x9516, 0x9516, 0x9516, 0x9516, 0x9516, 0x9516, 0x9516, 0x9516, 0x9516, 0x9536,
  0xa598, 0x4aac, 0xc659, 0xffdf, 0xef7d, 0xd69a, 0x3418, 0x4c99, 0xe73c, 0x8d79, 0x1398, 0xef5d, 0xae1a, 0x0b77, 0xf79e, 0xffff,
  0xecc6, 0xffb7, 0xfecc, 0xff0c, 0x8d17, 0x9536, 0x9d36, 0x9d36, 0x9d36, 0x9d36, 0x9d36, 0x9d36, 0x9d36, 0x9d36, 0x9536, 0x9d36,
  0xa598, 0x4aac, 0xce59, 0x5cfa, 0x4c99, 0xe71c, 0xb619, 0x0b77, 0xef5d, 0xbe7a, 0x0b77, 0xe73c, 0xd6db, 0x0b77, 0xef5d, 0xffff,
  0xecc6, 0xffb6, 0xfeed, 0xff2d, 0x7475, 0x84b4, 0x84b4, 0x84b4, 0x84b4, 0x84b4, 0x84b4, 0x84b4, 0x84b4, 0x84b4, 0x84b4, 0x84b4,
  0xa598, 0x4aac, 0xc638, 0xdefb, 0x0b78, 0xef5d, 0xdefb, 0x0b77, 0xe73c, 0xe71c, 0x0b77, 0xe73c, 0xe73c, 0x0b77, 0xef5d, 0xffff,
  0xece6, 0xffb5, 0xf628, 0xfe48, 0x63d3, 0x6c12, 0x6c12, 0x6c12, 0x6c12, 0x6c12, 0x6c12, 0x6c12, 0x6c12, 0x6c12, 0x6c12, 0x6bf2,
  0xa598, 0x4aac, 0xce59, 0xdefb, 0x0b78, 0xef5d, 0xe73c, 0x0b77, 0xef5d, 0xe73c, 0x0b77, 0xef5d, 0xef5d, 0x0b77, 0xef5d, 0xffff,
  0xece6, 0xffb4, 0xf64a, 0xfe8a, 0x5391, 0x63d1, 0x63d1, 0x63d1, 0x63d1, 0x63d1, 0x63d1, 0x63d1, 0x63d1, 0x63d1, 0x63d0, 0x63b0,
  0xa5b8, 0x4aac, 0xce59, 0x651a, 0x1bd8, 0xef5d, 0xcedc, 0x0b77, 0xef5d, 0xcedc, 0x0b77, 0xef5d, 0xef5d, 0x0b77, 0xef5d, 0xffff,
  0xece6, 0xff93, 0xfecc, 0xff0c, 0x5bb2, 0x6bf1, 0x6bf1, 0x6bf1, 0x6bf1, 0x6bf1, 0x6bf1, 0x6bf1, 0x6bf1, 0x6bf1, 0x6bf1, 0x63f1,
  0xa5b8, 0x4aac, 0xc638, 0xdefb, 0xdedb, 0xef5d, 0x3c38, 0x4458, 0xe73c, 0x95ba, 0x1398, 0xef5d, 0xb67b, 0x0b77, 0xef5d, 0xffff,
  0xece6, 0xff92, 0xff2e, 0xff4e, 0x63d2, 0x6c12, 0x6c12, 0x6c12, 0x7432, 0x7432, 0x7432, 0x7432, 0x7432, 0x7432, 0x6c32, 0x6c12,
  0xa5b8, 0x4aac, 0xc638, 0xef7d, 0xc6bc, 0x23f8, 0x0b77, 0xd6ba, 0xef5d, 0x23f8, 0x64d8, 0xe73c, 0x7d5a, 0x3418, 0xef5d, 0xffff,
  0xece7, 0xffb1, 0xffb1, 0xffd0, 0x9d79, 0xa598, 0x9d36, 0x7453, 0x7432, 0x7452, 0x7452, 0x7452, 0x7452, 0x7452, 0x7452, 0x7432,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xc6bc, 0x2bf8, 0xb5f9, 0xe73c, 0xbe9c, 0x0b77, 0xd6ba, 0xef5d, 0x23d8, 0x8559, 0xef7d, 0xffff,
  0xe508, 0xece7, 0xece6, 0xc468, 0x3a8d, 0x42ac, 0x7c32, 0x9d57, 0x7c94, 0x7c53, 0x7c73, 0x7c73, 0x7c73, 0x7c73, 0x7c73, 0x7453,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xef5d, 0xdedb, 0xe71c, 0xd71d, 0x0b77, 0x7519, 0xe73c, 0xbe7b, 0x0b77, 0xdedb, 0xf7be, 0xffff,
  0xce79, 0xc5b3, 0xc5b3, 0xc5b3, 0xbdd7, 0xbdd7, 0x8431, 0x6bd1, 0x9d57, 0x84d4, 0x7c94, 0x7c94, 0x7c94, 0x7c94, 0x7c94, 0x7c73,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xffdf, 0xf79e, 0x6d3a, 0x0b77, 0x4458, 0xdedb, 0xef7d, 0x1398, 0x8559, 0xef5d, 0xffff, 0xffff,
  0xef7d, 0xe71c, 0xe71c, 0xe71c, 0xe73c, 0xe71c, 0xd69a, 0x9d14, 0x5b4f, 0x9d57, 0x8d15, 0x84b4, 0x84b4, 0x84b4, 0x84b4, 0x84b4,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xef7e, 0x0b78, 0x74f8, 0xd69a, 0xef5d, 0x4c99, 0x3418, 0xdedb, 0xf7be, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0xffff, 0xffff, 0xffff, 0xf79e, 0xdedb, 0xb596, 0x530e, 0x8cf5, 0x9536, 0x8cd5, 0x8cd5, 0x8cd5, 0x84d5,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xf79e, 0xdedb, 0xdedb, 0xef5d, 0x3439, 0x1398, 0xd69a, 0xef7d, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xe71c, 0xc618, 0x5b4e, 0x8473, 0x9d57, 0x8cf5, 0x8cf5, 0x8cf5,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xffdf, 0xf79e, 0xf79e, 0x3c59, 0x1bd8, 0xce79, 0xe73c, 0xffdf, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe73c, 0xce59, 0x73f0, 0x6bd1, 0x9d77, 0x9536, 0x9516,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xffff, 0xffff, 0xf7be, 0xd6db, 0xd6ba, 0xe73c, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xef5d, 0xd69a, 0x94b3, 0x5b2e, 0x9d57, 0x9d57,
  0xa598, 0x4aac, 0xc639, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf79e, 0xf79e, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xdedb, 0xb596, 0x52ed, 0x9516,
  0xa5b8, 0x4acd, 0xc639, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xdefb, 0xc618, 0x530e,
  0x4acd, 0x530e, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe71c, 0xce59,
  0xbdf7, 0xce79, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xef7d,
  0xef5d, 0xef7d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'drivers', 64x64px
const uint16_t epd_bitmap_drivers[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfffe, 0xffda, 0xffb6, 0xff92, 0xff4f, 0xff4e, 0xff2d, 0xff4d, 0xff4d, 0xff4d, 0xff4d, 0xff4d, 0xff4d, 0xff4e,
  0xff4d, 0xff4d, 0xff4d, 0xff4d, 0xff4d, 0xff4d, 0xff4d, 0xff2d, 0xff4e, 0xff4f, 0xff92, 0xffb6, 0xffda, 0xfffe, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffd9, 0xff72, 0xff4c, 0xff6b, 0xffab, 0xffab, 0xff6b, 0xff6a, 0xff4a, 0xff4a, 0xff4a, 0xff4b, 0xff4b, 0xff4b, 0xff6b, 0xff6b,
  0xff6b, 0xff6b, 0xff6b, 0xff6b, 0xff4b, 0xff4b, 0xff4a, 0xff4a, 0xff6b, 0xff6b, 0xffab, 0xffab, 0xff6b, 0xff4c, 0xff72, 0xffd9,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff96, 0xff4d,
  0xff6a, 0xff8b, 0xff2a, 0xfee9, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfee8, 0xfee8,
  0xfee8, 0xfee8, 0xfee8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfee9, 0xff2a, 0xff8b, 0xff6b,
  0xff4e, 0xff97, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffb8, 0xff4d, 0xff8a, 0xff4a,
  0xfec8, 0xfea8, 0xfea7, 0xfea7, 0xfea7, 0xfea8, 0xfea8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfee8,
  0xfee8, 0xfee8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfea8, 0xfea7, 0xfea7, 0xfea7, 0xfea8, 0xfec9,
  0xff4a, 0xff8a, 0xff4d, 0xffb8, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfffe, 0xff71, 0xff6a, 0xff49, 0xfea8, 0xfe87,
  0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea8, 0xfea8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8,
  0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfea8, 0xfea8, 0xfea8, 0xfea7, 0xfe87, 0xfe87,
  0xfe87, 0xfea8, 0xff49, 0xff6a, 0xff72, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffbb, 0xff4d, 0xff8a, 0xfea8, 0xfe67, 0xfe67, 0xfe87,
  0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea8, 0xfea8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8,
  0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfea8, 0xfea8, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfe87,
  0xfe87, 0xfe67, 0xfe87, 0xfec8, 0xff8a, 0xff4d, 0xffbb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffba, 0xff2a, 0xff49, 0xfe87, 0xfe67, 0xfe67, 0xfe87, 0xfe87,
  0xfe87, 0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea8, 0xfea8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8,
  0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfea8, 0xfea8, 0xfea8, 0xfea7, 0xfea7, 0xfe87, 0xfe87, 0xfe87,
  0xfe87, 0xfe87, 0xfe67, 0xfe67, 0xfe87, 0xff49, 0xff2b, 0xffb9, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffba, 0xff0a, 0xff09, 0xfe47, 0xfe47, 0xfe67, 0xfe67, 0xfe87, 0xfe87,
  0xfe87, 0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea8, 0xfea7, 0xfea8, 0xfea8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8,
  0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfea8, 0xfea8, 0xfea8, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfe87, 0xfe87, 0xfe87,
  0xfe87, 0xfe67, 0xfe67, 0xfe67, 0xfe47, 0xfe67, 0xff09, 0xff2a, 0xffb9, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdb, 0xff0a, 0xff08, 0xfe46, 0xfe46, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67,
  0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea8, 0xfea8, 0xfea8, 0xfea8, 0xfec8, 0xfec8, 0xfec8,
  0xfec8, 0xfec8, 0xfec8, 0xfec8, 0xfea8, 0xfea8, 0xfea8, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfe87, 0xfe87, 0xfe87, 0xfe87,
  0xfe87, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe47, 0xfe46, 0xfee8, 0xff0a, 0xffbb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfffe, 0xff0c, 0xff08, 0xfe26, 0xfe46, 0xfe47, 0xfe47, 0xfe67, 0xfe67, 0xfe67, 0xfe67,
  0xfe67, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea8, 0xfea8, 0xfea8, 0xfea8, 0xfea8,
  0xfea8, 0xfea8, 0xfea8, 0xfea8, 0xfea7, 0xfea8, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87,
  0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe47, 0xfe46, 0xfe26, 0xff08, 0xff0c, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff30, 0xff28, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe47, 0xfe47, 0xfe67, 0xfe67, 0xfe67,
  0xfe67, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea8,
  0xfea8, 0xfea8, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe67,
  0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe47, 0xfe46, 0xfe46, 0xfe26, 0xfe26, 0xff29, 0xff30, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xff98, 0xff08, 0xfe46, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe47, 0xfe47, 0xfe67, 0xfe67,
  0xfe67, 0xfe67, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7,
  0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe67, 0xfe67,
  0xfe67, 0xfe67, 0xfe67, 0xfe47, 0xfe46, 0xfe46, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xff29, 0xff98, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xfecb, 0xfea7, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe46, 0xfe47, 0xfe67,
  0xfe67, 0xfe67, 0xfe67, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7,
  0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfea7, 0xfe87, 0xfe87, 0xfe86, 0xfe66, 0xfe86, 0xfe87, 0xfe87, 0xfe87, 0xfe67, 0xfe67,
  0xfe67, 0xfe67, 0xfe47, 0xfe46, 0xfe46, 0xfe46, 0xfe26, 0xfe26, 0xfe26, 0xfe06, 0xfea7, 0xfecb, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xff76, 0xff08, 0xfe06, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe67,
  0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfea7, 0xfea7,
  0xfea7, 0xfea7, 0xfea7, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe66, 0xfea9, 0xfecc, 0xfe89, 0xfe65, 0xfe87, 0xfe67, 0xfe67, 0xfe67,
  0xfe67, 0xfe47, 0xfe46, 0xfe46, 0xfe46, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe06, 0xfe06, 0xff08, 0xff75, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xfeab, 0xfe67, 0xfde6, 0xfe06, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe46, 0xfe46,
  0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87,
  0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe66, 0xff10, 0xffdd, 0xffff, 0xffdd, 0xff10, 0xfe45, 0xfe66, 0xfe67, 0xfe67,
  0xfe47, 0xfe46, 0xfe46, 0xfe46, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe06, 0xfe06, 0xfde6, 0xfe67, 0xfecb, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xff98, 0xfec7, 0xfde6, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe46,
  0xfe46, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87,
  0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe66, 0xfe8b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff11, 0xfe44, 0xfe66, 0xfe47,
  0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe06, 0xfe06, 0xfe06, 0xfde6, 0xfec7, 0xff98, 0xffff, 0xffff,
  0xffff, 0xffff, 0xff0f, 0xfe87, 0xfde5, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46,
  0xfe46, 0xfe46, 0xfe46, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87,
  0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe87, 0xfe65, 0xf6b0, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfef1, 0xfe24, 0xfe46,
  0xfe46, 0xfe46, 0xfe46, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfde6, 0xfe87, 0xff0f, 0xffff, 0xffff,
  0xffff, 0xfffe, 0xfe69, 0xfe06, 0xfde5, 0xfde6, 0xfde6, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46,
  0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67,
  0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe65, 0xf62c, 0xe75f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfef1, 0xfe24,
  0xfe46, 0xfe46, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfde6, 0xfde6, 0xfe06, 0xfe89, 0xfffe, 0xffff,
  0xffff, 0xff99, 0xfe67, 0xfdc5, 0xfde5, 0xfde6, 0xfde6, 0xfde6, 0xfe06, 0xfe06, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe26,
  0xfe26, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe47, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67,
  0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe66, 0xfd63, 0xe696, 0xe77f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfef0,
  0xfe04, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfde6, 0xfde6, 0xfde5, 0xfdc5, 0xfe87, 0xff99, 0xffff,
  0xffff, 0xff54, 0xfe86, 0xfdc5, 0xfdc5, 0xfde5, 0xfde6, 0xfde6, 0xfde6, 0xfe06, 0xfe06, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26,
  0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe66,
  0xfe66, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfe67, 0xfd83, 0xfd24, 0xe697, 0xe77f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xfef0, 0xfe04, 0xfe06, 0xfe26, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfde6, 0xfde6, 0xfde5, 0xfdc5, 0xfdc5, 0xfe86, 0xff54, 0xffff,
  0xffff, 0xfeef, 0xfe46, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfde6, 0xfde6, 0xfde6, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfe26,
  0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46,
  0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe66, 0xfe26, 0xfd22, 0xfd04, 0xe697, 0xe77f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xfed0, 0xfde4, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfde6, 0xfde6, 0xfde5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfe46, 0xfecf, 0xffff,
  0xffff, 0xfeac, 0xfe05, 0xfda5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfde5, 0xfde6, 0xfde6, 0xfe06, 0xfe06, 0xfe06, 0xfe06, 0xfe06,
  0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe25, 0xfe25,
  0xfe25, 0xfe25, 0xfe25, 0xfe25, 0xfe25, 0xfe25, 0xfe45, 0xfe04, 0xfce0, 0xfce2, 0xe655, 0xef7e, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfed0, 0xfde3, 0xfe05, 0xfe06, 0xfde5, 0xfde6, 0xfde5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfe06, 0xfeac, 0xffff,
  0xffff, 0xfe4a, 0xfde5, 0xfda5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfde5, 0xfde5, 0xfe06, 0xfe06, 0xfe06, 0xfe06,
  0xfe06, 0xfe06, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe26, 0xfe46, 0xfe46, 0xfe46, 0xfe46, 0xfe25, 0xfe26, 0xfe8b, 0xfeac,
  0xfeac, 0xfeac, 0xfeac, 0xfeac, 0xfeac, 0xfeac, 0xfeac, 0xfeac, 0xfe6c, 0xfd88, 0xfdab, 0xf77c, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xfed0, 0xfdc3, 0xfde5, 0xfde5, 0xfde5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfe4a, 0xffff,
  0xffff, 0xfe29, 0xfdc5, 0xfda5, 0xfda5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfde5, 0xfde5, 0xfde6, 0xfde6, 0xfe06,
  0xfe06, 0xfe06, 0xfe06, 0xfe26, 0xfe05, 0xfe04, 0xfe04, 0xfe04, 0xfe25, 0xfe26, 0xfe26, 0xfe25, 0xfe47, 0xff78, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xfeaf, 0xfdc4, 0xfde5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfda5, 0xfda5, 0xfdc5, 0xfe28, 0xfffe,
  0xfffe, 0xfe08, 0xfdc5, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfde5, 0xfde5, 0xfde5, 0xfde6,
  0xfde6, 0xfe06, 0xfe06, 0xfde5, 0xfe06, 0xfef2, 0xff57, 0xff13, 0xfe27, 0xfe05, 0xfe26, 0xfe04, 0xf6f4, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf608, 0xfdc4, 0xfdc5, 0xfdc5, 0xfdc5, 0xfda5, 0xfda5, 0xfda5, 0xfdc5, 0xfe08, 0xfffe,
  0xfffe, 0xfde8, 0xfda5, 0xfd85, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfde5, 0xfde5, 0xfde5,
  0xfde6, 0xfde6, 0xfde4, 0xfe06, 0xff79, 0xffff, 0xffff, 0xffff, 0xff7a, 0xfe06, 0xfe05, 0xfe05, 0xeef8, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xee0d, 0xfda4, 0xfdc5, 0xfdc5, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfdc5, 0xfe08, 0xfffe,
  0xfffe, 0xfde8, 0xfda5, 0xfd85, 0xfd85, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfde5,
  0xfde6, 0xfdc4, 0xfde6, 0xff9a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf66e, 0xfe04, 0xfda4, 0xe634, 0xef9f, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xdf1d, 0xf549, 0xfda4, 0xfdc5, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfd85, 0xfda5, 0xfe08, 0xfffe,
  0xfffe, 0xfde8, 0xfda5, 0xfd85, 0xfd85, 0xfd85, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfdc5,
  0xfdc4, 0xfde6, 0xff7a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef9f, 0xee0f, 0xfe04, 0xfd63, 0xf4e8, 0xdedb, 0xdf3e, 0xe75e,
  0xe75e, 0xe75e, 0xe75e, 0xe75e, 0xdf3e, 0xdf3e, 0xdf3e, 0xdf3d, 0xdf3d, 0xdf3d, 0xdf1d, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0xdf3e, 0xe5d3, 0xfc62, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfd85, 0xfd85, 0xfd85, 0xfda5, 0xfde8, 0xfffe,
  0xfffe, 0xfde8, 0xfda5, 0xfd65, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfda4,
  0xfdc6, 0xff7a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7bf, 0xdedb, 0xf507, 0xfde4, 0xfde5, 0xfc61, 0xf4c6, 0xedd0, 0xe5f2,
  0xe5f2, 0xe5f2, 0xe5f2, 0xe5f2, 0xe5f2, 0xe5f2, 0xe5f2, 0xe5f2, 0xe5f2, 0xe5d1, 0xe5b0, 0xf75c, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffdf, 0xdf3d, 0xddf4, 0xfbe2, 0xfca3, 0xfdc5, 0xfda5, 0xfda5, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfda5, 0xfde8, 0xfffe,
  0xfffe, 0xfde8, 0xfd85, 0xfd65, 0xfd65, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfda5, 0xfda4, 0xfdc6,
  0xff7a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xd6fc, 0xed2c, 0xfc81, 0xfde5, 0xfe06, 0xfd64, 0xfc21, 0xfc00, 0xfc21,
  0xfc21, 0xfc21, 0xfc01, 0xfc01, 0xfc01, 0xfc01, 0xfc01, 0xfc01, 0xfc00, 0xfbc0, 0xfdef, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0xdf3d, 0xddf4, 0xfbe2, 0xfc22, 0xfd85, 0xfda5, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfd65, 0xfd85, 0xfde8, 0xfffe,
  0xfffe, 0xfde8, 0xfd85, 0xfd65, 0xfd65, 0xfd65, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfda5, 0xfda5, 0xfd83, 0xfda6, 0xff79,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xd6fc, 0xed4c, 0xfbe0, 0xfd44, 0xfe06, 0xfde5, 0xfde5, 0xfda5, 0xfd04, 0xfce3,
  0xfd03, 0xfd03, 0xfd03, 0xfce3, 0xfce3, 0xfce3, 0xfce3, 0xfce3, 0xfca1, 0xfe31, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf,
  0xdf3d, 0xddf4, 0xfbe2, 0xfc21, 0xfd85, 0xfda5, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfd65, 0xfd65, 0xfd64, 0xfd85, 0xfdc8, 0xfffe,
  0xfffe, 0xfdc8, 0xfd65, 0xfd44, 0xfd64, 0xfd65, 0xfd65, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfd85, 0xfd63, 0xfda5, 0xff79, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xef9e, 0xd6fc, 0xed2c, 0xfbc0, 0xfce3, 0xfde5, 0xfdc5, 0xfdc5, 0xfdc5, 0xfde5, 0xfde5, 0xfde5,
  0xfde5, 0xfde5, 0xfde5, 0xfde5, 0xfde5, 0xfde5, 0xfde5, 0xfdc3, 0xfef3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdf3d,
  0xddf4, 0xfbc2, 0xfc21, 0xfd85, 0xfda5, 0xfd85, 0xfd85, 0xfd85, 0xfd65, 0xfd65, 0xfd65, 0xfd64, 0xfd64, 0xfd85, 0xfdc8, 0xfffe,
  0xfffe, 0xfdc7, 0xfd64, 0xfd44, 0xfd44, 0xfd64, 0xfd64, 0xfd65, 0xfd65, 0xfd65, 0xfd85, 0xfd63, 0xfd85, 0xff79, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0xecea, 0xfb80, 0xfca2, 0xfdc4, 0xfda4, 0xfda4, 0xfda4, 0xfda4, 0xfda4, 0xfda4, 0xfda4,
  0xfda4, 0xfda3, 0xfda4, 0xfdc5, 0xfdc5, 0xfdc5, 0xfda3, 0xfeb2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdf3d, 0xddf4,
  0xfbc2, 0xfc01, 0xfd85, 0xfda5, 0xfd85, 0xfd85, 0xfd85, 0xfd65, 0xfd65, 0xfd65, 0xfd64, 0xfd64, 0xfd44, 0xfd64, 0xfdc7, 0xfffe,
  0xfffe, 0xf5c7, 0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd64, 0xfd64, 0xfd65, 0xfd65, 0xfd64, 0xfd85, 0xff79, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffbe, 0xfe96, 0xfed7, 0xff58, 0xff58, 0xff58, 0xff58, 0xff58, 0xff58, 0xff58, 0xff58, 0xff58,
  0xff58, 0xff36, 0xfe4c, 0xfda4, 0xfdc5, 0xfda4, 0xf5e9, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdf3d, 0xddf4, 0xfbc2,
  0xfc01, 0xfd65, 0xfda5, 0xfd85, 0xfd84, 0xfd64, 0xfd65, 0xfd65, 0xfd64, 0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd64, 0xfdc7, 0xfffe,
  0xfffe, 0xf5a7, 0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd64, 0xfd64, 0xfd44, 0xff38, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xfe4c, 0xfd83, 0xfd83, 0xedee, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdf3d, 0xddd4, 0xfba2, 0xfbe1,
  0xfd65, 0xfda5, 0xfd65, 0xfd64, 0xfd64, 0xfd64, 0xfd64, 0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfdc7, 0xfffe,
  0xfffe, 0xfda7, 0xfd44, 0xfd24, 0xfd24, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd43, 0xf5aa, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xeef7, 0xfd84, 0xfd63, 0xed0a, 0xdf1d, 0xf7be, 0xffff, 0xf7be, 0xdf3d, 0xddd3, 0xfba2, 0xfbe1, 0xfd64,
  0xfd85, 0xfd65, 0xfd64, 0xfd64, 0xfd64, 0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd24, 0xfd24, 0xfd44, 0xfda7, 0xfffe,
  0xfffe, 0xfda7, 0xfd44, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd44, 0xfd44, 0xfd23, 0xed2a, 0xe73e, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7ff, 0xde57, 0xfd44, 0xfd84, 0xfc02, 0xe592, 0xd6fd, 0xd71d, 0xd6fd, 0xddd3, 0xfb82, 0xfbc1, 0xfd64, 0xfd85,
  0xfd64, 0xfd64, 0xfd64, 0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd44, 0xfda7, 0xfffe,
  0xfffe, 0xfda7, 0xfd24, 0xfd04, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd44, 0xfd23, 0xf404, 0xd638, 0xe77e, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0xef7d, 0xef7e, 0xef7e, 0xef7e, 0xef7e, 0xef7e, 0xef9e, 0xef9e, 0xef9e, 0xef9e, 0xef9e,
  0xef9e, 0xef7d, 0xd73e, 0xe52e, 0xfca2, 0xfdc5, 0xfc62, 0xfb62, 0xeccb, 0xe570, 0xeccb, 0xfb81, 0xfbc1, 0xfd44, 0xfd85, 0xfd64,
  0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd04, 0xfd24, 0xfda7, 0xfffe,
  0xfffe, 0xf587, 0xfd24, 0xfd04, 0xfd04, 0xfd04, 0xfd24, 0xfd24, 0xfd24, 0xfd44, 0xfbc1, 0xec28, 0xce79, 0xe77e, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xe71b, 0xce38, 0xd699, 0xd699, 0xd699, 0xd699, 0xd699, 0xd69a, 0xd69a, 0xd69a, 0xd69a, 0xd69a,
  0xd69a, 0xd679, 0xe571, 0xfb82, 0xfce3, 0xfda5, 0xfd64, 0xfbe2, 0xfb40, 0xfb20, 0xfb20, 0xfbe2, 0xfd44, 0xfd85, 0xfd44, 0xfd44,
  0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd04, 0xfd04, 0xfd04, 0xfd24, 0xf5a7, 0xfffe,
  0xffff, 0xf588, 0xfd24, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd24, 0xfd44, 0xfca3, 0xfb00, 0xec28, 0xce79, 0xe77e, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffbd, 0xf4aa, 0xf3a4, 0xf406, 0xf406, 0xf406, 0xf406, 0xf406, 0xf406, 0xf406, 0xf406, 0xf406,
  0xf406, 0xf3c4, 0xfb20, 0xfbe2, 0xfd64, 0xfd64, 0xfd65, 0xfd44, 0xfca3, 0xfc43, 0xfca3, 0xfd44, 0xfd64, 0xfd44, 0xfd44, 0xfd44,
  0xfd44, 0xfd44, 0xfd44, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd24, 0xf588, 0xffff,
  0xffff, 0xf5ca, 0xfd24, 0xfce4, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd44, 0xfc63, 0xfae0, 0xec28, 0xce79, 0xe77e,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff5b, 0xfbe4, 0xfb20, 0xfb61, 0xfb61, 0xfb61, 0xfb61, 0xfb61, 0xfb61, 0xfb61, 0xfb61,
  0xfb61, 0xfb81, 0xfc23, 0xfd44, 0xfd64, 0xfd44, 0xfd44, 0xfd64, 0xfd64, 0xfd64, 0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44,
  0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfce4, 0xfd24, 0xf5aa, 0xffff,
  0xffff, 0xf5ed, 0xfd44, 0xfce4, 0xfce4, 0xfce4, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd44, 0xfc43, 0xfae0, 0xec28, 0xce79,
  0xe77e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff9c, 0xfd47, 0xfcc2, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04,
  0xfd04, 0xfd24, 0xfd64, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd24, 0xfd24, 0xfd24, 0xfd24,
  0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfce4, 0xfce4, 0xfce4, 0xfd44, 0xf5ec, 0xffff,
  0xffff, 0xf651, 0xfd44, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd24, 0xfc43, 0xfac0, 0xec08,
  0xce79, 0xe77e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffbc, 0xfd87, 0xfd23, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44,
  0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd44, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24,
  0xfd24, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfd44, 0xf651, 0xffff,
  0xffff, 0xeed6, 0xfd24, 0xfcc4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfd04, 0xfd04, 0xfd24, 0xfc43, 0xfac0,
  0xec08, 0xce79, 0xe77e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff7b, 0xfd25, 0xfd23, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24,
  0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd04, 0xfd04, 0xfd04,
  0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfcc4, 0xfd24, 0xeed6, 0xffff,
  0xffff, 0xf77c, 0xf4c5, 0xfce4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfd04, 0xfd24, 0xfc43,
  0xfac0, 0xec08, 0xce79, 0xe77e, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xedac, 0xfd02, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24,
  0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd24, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04,
  0xfd04, 0xfd04, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfcc4, 0xfcc4, 0xfce4, 0xf4c4, 0xf77c, 0xffff,
  0xffff, 0xffff, 0xed4a, 0xfd04, 0xfcc3, 0xfcc3, 0xfcc4, 0xfcc4, 0xfcc4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfd24,
  0xfc23, 0xfaa0, 0xebe8, 0xce59, 0xe75d, 0xffff, 0xffff, 0xffff, 0xe75e, 0xe50d, 0xfce2, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04,
  0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfce4,
  0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc3, 0xfcc3, 0xfd04, 0xed4a, 0xffff, 0xffff,
  0xffff, 0xffff, 0xe633, 0xfd04, 0xfca3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfce4, 0xfce4, 0xfce4,
  0xfd04, 0xfc23, 0xfaa0, 0xebe8, 0xce79, 0xdf3d, 0xe75d, 0xdf3d, 0xce59, 0xf3c5, 0xfcc3, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04,
  0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfd04, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4,
  0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc3, 0xfcc3, 0xfcc3, 0xfca3, 0xfd04, 0xe633, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf77d, 0xeca5, 0xfce4, 0xfca3, 0xfca3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfce4,
  0xfce4, 0xfd04, 0xfc23, 0xfaa0, 0xebc7, 0xd5d5, 0xce38, 0xcdd6, 0xebe8, 0xfb21, 0xfd04, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4,
  0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4,
  0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc3, 0xfcc3, 0xfca3, 0xfca3, 0xfca3, 0xfce4, 0xeca5, 0xef7d, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xdd8f, 0xfd04, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc4, 0xfcc4,
  0xfcc4, 0xfcc4, 0xfd04, 0xfc03, 0xfaa0, 0xfac1, 0xf344, 0xfae2, 0xfaa0, 0xfc23, 0xfd04, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4,
  0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfce4, 0xfcc4, 0xfcc4, 0xfcc4,
  0xfcc4, 0xfcc4, 0xfcc4, 0xfcc3, 0xfcc3, 0xfcc3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfd04, 0xdd8f, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xef3c, 0xec85, 0xfcc4, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfcc3, 0xfcc3,
  0xfcc3, 0xfcc4, 0xfcc4, 0xfce4, 0xfc23, 0xfb22, 0xfac1, 0xfb01, 0xfc03, 0xfce4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfce4, 0xfce4,
  0xfce4, 0xfce4, 0xfce4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4,
  0xfcc3, 0xfcc3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfcc3, 0xec85, 0xef3c, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xd5b2, 0xfce4, 0xfca3, 0xfc83, 0xfc83, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3,
  0xfca3, 0xfca3, 0xfca3, 0xfcc3, 0xfce4, 0xfcc4, 0xfc83, 0xfcc4, 0xfce4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4,
  0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc4, 0xfcc3, 0xfcc3, 0xfca3, 0xfca3,
  0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfc83, 0xfc83, 0xfca3, 0xfce4, 0xd591, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xdca9, 0xfce4, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfca3, 0xfca3, 0xfca3, 0xfca3,
  0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc3, 0xfcc4, 0xfcc4, 0xfcc4,
  0xfcc3, 0xfcc3, 0xfcc4, 0xfcc3, 0xfcc4, 0xfcc3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3,
  0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfce4, 0xdc88, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdeb9, 0xe465, 0xfcc4, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfca3,
  0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3,
  0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3,
  0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfcc4, 0xe465, 0xdeb9, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xcdf5, 0xf463, 0xfca3, 0xfc63, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83,
  0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3,
  0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfca3, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83,
  0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc63, 0xfca3, 0xf463, 0xcdd4, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xcd72, 0xf463, 0xfca3, 0xfc63, 0xfc63, 0xfc63, 0xfc83, 0xfc83, 0xfc83,
  0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83,
  0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83,
  0xfc83, 0xfc83, 0xfc83, 0xfc63, 0xfc63, 0xfc63, 0xfca3, 0xf463, 0xcd71, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xcd51, 0xec43, 0xfca3, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63,
  0xfc63, 0xfc63, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83,
  0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc63,
  0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfca3, 0xec43, 0xcd51, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc593, 0xe445, 0xfcc3, 0xfc63, 0xfc63, 0xfc63, 0xfc63,
  0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83, 0xfc83,
  0xfc83, 0xfc83, 0xfc83, 0xfc63, 0xfc83, 0xfc83, 0xfc63, 0xfc83, 0xfc83, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63,
  0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfcc3, 0xe445, 0xcd93, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce38, 0xd468, 0xfca3, 0xfc83, 0xfc63, 0xfc63,
  0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63,
  0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63,
  0xfc63, 0xfc43, 0xfc83, 0xfca3, 0xd468, 0xce37, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0xc50f, 0xe445, 0xfca3, 0xfc83,
  0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63,
  0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc43, 0xfc43, 0xfc43,
  0xfc83, 0xfca3, 0xe444, 0xc50f, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce38, 0xcccc, 0xec45,
  0xfc83, 0xfca3, 0xfc63, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc63, 0xfc43, 0xfc43,
  0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc43, 0xfc63, 0xfca3, 0xfc83,
  0xec44, 0xccac, 0xce37, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xc638,
  0xc4ef, 0xd468, 0xec24, 0xfc63, 0xfca3, 0xfc83, 0xfc83, 0xfc83, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63,
  0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc63, 0xfc83, 0xfc83, 0xfca3, 0xfc63, 0xec24, 0xd468, 0xc50f,
  0xce38, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xe71c, 0xc5f6, 0xc531, 0xcc8b, 0xd468, 0xdc26, 0xe425, 0xec24, 0xec24, 0xec24, 0xec24, 0xec24, 0xec24, 0xec24, 0xec24,
  0xec24, 0xec24, 0xec24, 0xec24, 0xec24, 0xec24, 0xec24, 0xec24, 0xe425, 0xdc26, 0xd468, 0xcc8b, 0xc530, 0xc5f6, 0xe71c, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xe73c, 0xd69a, 0xc638, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7,
  0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc5f7, 0xc638, 0xd69a, 0xe73c, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'Precision', 32x32px
const uint16_t epd_bitmap_Precision[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0xbdd7, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596,
  0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xb596, 0xbdd7, 0xffdf,
  0xef7d, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0xef7d,
  0xef5d, 0xb596, 0xffff, 0xdefc, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c,
  0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdefc, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c,
  0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xe71c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c,
  0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe71c, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xe73c, 0xe73c, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d,
  0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xe73c, 0xe73c, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xef5d, 0xf77d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d,
  0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xff9d, 0xf79d, 0xf77d, 0xef5d, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xf77d, 0x0334, 0x0354, 0x0354, 0x0354, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334,
  0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x0334, 0x1438, 0xf77d, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xff9d, 0x0354, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x351b, 0xf77d, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xffbe, 0x0334, 0xffff, 0x528a, 0x5aca, 0x528a, 0xe71c, 0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xdedb,
  0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xdedb, 0xffff, 0x34fb, 0xff9d, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xffbe, 0x0334, 0xffff, 0xf7be, 0x52aa, 0xf7be, 0xef5d, 0xe73d, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c,
  0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xffff, 0x2cfb, 0xff9d, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xffde, 0x0334, 0xffff, 0xffff, 0x528a, 0xffff, 0xf7be, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e,
  0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xffff, 0x2cfa, 0xffbe, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xffde, 0x0334, 0xffff, 0xffff, 0x528a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2cfa, 0xffbe, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xfffe, 0x0334, 0xffff, 0xffff, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2cfa, 0xffde, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xffff, 0x0334, 0xffff, 0x5289, 0x52aa, 0x4a69, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2cfa, 0xffde, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb595, 0xffff, 0xffff, 0x0334, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x34fb, 0xffde, 0xffff, 0xb595, 0xef5d,
  0xef5d, 0xad75, 0xffff, 0xffff, 0x1418, 0x351b, 0x351b, 0x351b, 0x351b, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb,
  0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x2cfb, 0x351b, 0x1c99, 0xffff, 0xffff, 0xad75, 0xef5d,
  0xef5d, 0xad75, 0xffff, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffff, 0xad75, 0xef5d,
  0xef5d, 0xad75, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf,
  0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xad75, 0xef5d,
  0xef5d, 0xad75, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf,
  0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xad75, 0xef5d,
  0xef5d, 0xad75, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf,
  0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xad75, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0xef5d,
  0xef5d, 0xbdd7, 0xb596, 0xb596, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75,
  0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xad75, 0xb596, 0xb596, 0xbdd7, 0xef5d,
  0xf79e, 0xd6ba, 0xc618, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7,
  0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xc618, 0xd6ba, 0xf79e,
  0xffdf, 0xf79e, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d,
  0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xf79e, 0xffdf,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'readout', 32x32px
const uint16_t epd_bitmap_readout[] PROGMEM = {
  0xffdf, 0xbdf7, 0xa514, 0xa514, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3,
  0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0xa514, 0xa514, 0xbdf7, 0xffdf,
  0xf79e, 0xa514, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa514, 0xf79e,
  0xef5d, 0xa514, 0xffff, 0xdefc, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c,
  0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdf1c, 0xdefc, 0xffff, 0xa514, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c,
  0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xe71c, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xe71c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c,
  0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe71c, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c,
  0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c,
  0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xe73c, 0xe73d, 0xe73d, 0xe75d, 0xef5d, 0xef5d, 0xef5d, 0xe75d, 0xe75d, 0xe75d, 0xe75d, 0xef5d, 0xef5d,
  0xef5d, 0xe75d, 0xe73d, 0xe73d, 0xe75d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xe75d, 0xe73d, 0xe73c, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xe73d, 0xef5d, 0xef5d, 0xf79e, 0xf7be, 0xf7be, 0xf7be, 0xf79e, 0xef5d, 0xef5d, 0xf79e, 0xf7be, 0xf7be,
  0xf7be, 0xf79e, 0xef5d, 0xef5d, 0xef7d, 0xf79e, 0xf7be, 0xf7be, 0xf7be, 0xf79e, 0xef7d, 0xef5d, 0xe73d, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xef5d, 0xef5d, 0xf77e, 0x632c, 0x4a6a, 0x528a, 0x4a6a, 0x632c, 0xf79e, 0xf79e, 0x632c, 0x4a6a, 0x528a,
  0x4a6a, 0x632c, 0xf79e, 0xf79e, 0xb5b6, 0x4a6a, 0x528a, 0x528a, 0x4a8a, 0x4249, 0xf79e, 0xef5d, 0xef5d, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xef5d, 0xef5d, 0xf79e, 0xd69a, 0x5aec, 0x632c, 0x5aec, 0xd69a, 0xf79e, 0xf79e, 0xd69a, 0x5aec, 0x632c,
  0x5aec, 0xd69a, 0xf79e, 0xf7be, 0x8c51, 0x5aeb, 0x5aeb, 0x5aeb, 0x5acb, 0x528a, 0xf79e, 0xef5d, 0xef5d, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xef7d, 0xef7d, 0xef7d, 0xf79e, 0x632d, 0x6b6e, 0x632d, 0xffdf, 0xef7d, 0xef9d, 0xf79e, 0x632d, 0x6b6e,
  0x632d, 0xffdf, 0xf79e, 0xef7e, 0x630c, 0x8c71, 0xffff, 0xffff, 0xffdf, 0xf7be, 0xef9e, 0xef7d, 0xef7d, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xef7d, 0xef7d, 0xef7d, 0xffdf, 0x6b6d, 0x73ae, 0x6b6e, 0xffdf, 0xf79e, 0xf79e, 0xffdf, 0x6b6e, 0x73ae,
  0x6b6d, 0xffdf, 0xf7be, 0xc618, 0x6b6d, 0xb596, 0xdedb, 0xf79e, 0xf7be, 0xf79e, 0xef7d, 0xef7d, 0xef7d, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xef7d, 0xef7d, 0xef9e, 0xffdf, 0x73af, 0x7bf0, 0x73cf, 0xffff, 0xffdf, 0xffdf, 0xffff, 0x73cf, 0x7bf0,
  0x73af, 0xffdf, 0xf7be, 0x9cf3, 0x73cf, 0x7bcf, 0x73cf, 0x738e, 0xad76, 0xf7be, 0xf79e, 0xef7d, 0xef7d, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xef7d, 0xef7d, 0xf79e, 0xffdf, 0x7bf0, 0x8431, 0x8410, 0x73cf, 0x738e, 0x738e, 0x73cf, 0x8410, 0x8431,
  0x7bf0, 0xffff, 0xf7de, 0x73ae, 0x7bef, 0x7c10, 0x8410, 0x8430, 0x7bf0, 0xbdd7, 0xf7be, 0xef9d, 0xef7d, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xef9e, 0xef9e, 0xf79e, 0xffff, 0x73af, 0x7bf0, 0x73cf, 0xffff, 0xffdf, 0xffdf, 0xffff, 0x73cf, 0x7bf0,
  0x73af, 0xffff, 0xf7be, 0xf7df, 0xffff, 0xe73c, 0xad55, 0x73cf, 0x7bcf, 0x7bcf, 0xffdf, 0xf79e, 0xef9e, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xf79e, 0xf79e, 0xf79e, 0xffff, 0x634d, 0x738e, 0x634d, 0xffff, 0xf7be, 0xf7be, 0xffff, 0x634d, 0x738e,
  0x634d, 0xffff, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xffff, 0xbe18, 0x6b6d, 0x632d, 0xffff, 0xf79e, 0xf79e, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xf79e, 0xf79e, 0xf7be, 0xffff, 0x5aeb, 0x632d, 0x5aeb, 0xffff, 0xf7be, 0xf7be, 0xffff, 0x5aeb, 0x632d,
  0x5aeb, 0xffff, 0xffdf, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffff, 0x5aeb, 0x52cb, 0xffff, 0xf7be, 0xf79e, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xf79e, 0xf79e, 0xf7be, 0xffff, 0x528a, 0x5aeb, 0x528a, 0xffff, 0xf7bf, 0xf7be, 0xffff, 0x528a, 0x5aeb,
  0x528a, 0xffff, 0xffff, 0x528a, 0x52aa, 0xffff, 0xffff, 0xb5d7, 0x4a8a, 0x7bcf, 0xffff, 0xf7be, 0xf79e, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xf7be, 0xf7be, 0xffdf, 0xe71c, 0x528a, 0x5acb, 0x528a, 0xdebb, 0xffdf, 0xffdf, 0xe71c, 0x528a, 0x5acb,
  0x528a, 0xdedb, 0xffff, 0x4a49, 0x528a, 0x73ae, 0x7bf0, 0x4a69, 0x52ab, 0xe71c, 0xffdf, 0xf7be, 0xf7be, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xf7be, 0xf7be, 0xffff, 0x630c, 0x4a49, 0x4a6a, 0x4a49, 0x632c, 0xffff, 0xffff, 0x630c, 0x4a49, 0x4a6a,
  0x4a49, 0x632d, 0xffff, 0x9cf3, 0x4a49, 0x4a69, 0x4a49, 0x7bcf, 0xe71c, 0xffff, 0xf7df, 0xf7be, 0xf7be, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xf7df, 0xf7be, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7be, 0xf7be, 0xf7df, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf,
  0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf,
  0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf,
  0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf,
  0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0xef5d,
  0xef5d, 0xa514, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa514, 0xef5d,
  0xef5d, 0xa534, 0xa514, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3,
  0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0x9cf3, 0xa514, 0xa534, 0xef5d,
  0xef7d, 0xce79, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7,
  0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xce79, 0xef7d,
  0xffdf, 0xef7d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d,
  0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef5d, 0xef7d, 0xffdf
};
// 'sensor', 64x64px
const uint16_t epd_bitmap_sensor[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xf79e, 0xef5d,
  0xef5d, 0xf79e, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdefb, 0xb596, 0x94b3, 0x8c92, 0x94d3, 0x9d35, 0xa556, 0xad96,
  0xad96, 0xa556, 0x9d15, 0x94d3, 0x8c92, 0x94b3, 0xb596, 0xdefb, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xce79, 0x94d3, 0x94b3, 0xb5b7, 0xce9b, 0xdf3d, 0xef7e, 0xef9e, 0xf7bf, 0xf7bf, 0xf7bf,
  0xf7bf, 0xf7bf, 0xf7bf, 0xef9e, 0xef7e, 0xdf3d, 0xce9b, 0xb5b7, 0x94b3, 0x94d3, 0xce79, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7be, 0xad75, 0x8cb2, 0xb5f8, 0xdf1c, 0xef9e, 0xf7bf, 0xef9e, 0xe75d, 0xdf1d, 0xd6fc, 0xcebb, 0xcebb, 0xce9b,
  0xce9b, 0xcebb, 0xd6db, 0xd6fc, 0xdf1d, 0xe75d, 0xef9e, 0xf7bf, 0xef9e, 0xdf1c, 0xb5f8, 0x8c92, 0xad75, 0xf79e, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xf7be, 0xad75, 0x94b3, 0xc67a, 0xe77e, 0xf7bf, 0xef7e, 0xdf1c, 0xcebb, 0xc65a, 0xbe19, 0xb5f8, 0xadd7, 0xad97, 0xad97, 0xa576,
  0xa576, 0xa597, 0xad97, 0xadb7, 0xb5f8, 0xbe19, 0xc65a, 0xcebb, 0xdf1d, 0xef7e, 0xf7bf, 0xe77e, 0xc67a, 0x94b3, 0xad75, 0xf7be,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xce79,
  0x8c92, 0xc65a, 0xef7e, 0xefbe, 0xe73d, 0xcebb, 0xbe5a, 0xb5f8, 0xad97, 0x9d15, 0x8c93, 0x7c31, 0x73af, 0x6b8f, 0x6b8e, 0x6b6e,
  0x6b8e, 0x6b8e, 0x6b8f, 0x73af, 0x7c11, 0x8c93, 0x9d15, 0xad97, 0xb5f8, 0xbe59, 0xcebb, 0xe73d, 0xf7be, 0xef7e, 0xc65a, 0x8c92,
  0xce79, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x9cf3, 0xad76,
  0xe73d, 0xf7bf, 0xe73d, 0xce9b, 0xbe19, 0xadb7, 0x9d15, 0x8451, 0x6b8f, 0x73af, 0x7c11, 0x8c93, 0x9d14, 0xa555, 0xad76, 0xad76,
  0xad76, 0xad76, 0xa555, 0x9d14, 0x8c93, 0x7c11, 0x6baf, 0x6b8f, 0x8451, 0x9d15, 0xadb7, 0xbe19, 0xcebb, 0xe73d, 0xf7bf, 0xe73d,
  0xad76, 0x9cf3, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0x8c72, 0xc67a, 0xef9e,
  0xef7e, 0xd6db, 0xbe39, 0xadb7, 0x94d4, 0x73d0, 0x73af, 0x8c72, 0xa555, 0xa535, 0x8431, 0x632d, 0x4a6a, 0x39e7, 0x2986, 0x2945,
  0x2945, 0x2986, 0x39e7, 0x4a6a, 0x632d, 0x8431, 0xa535, 0xa555, 0x8c72, 0x73af, 0x73d0, 0x94d4, 0xadb7, 0xbe39, 0xd6db, 0xef7e,
  0xef9e, 0xc67a, 0x8c72, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x8c92, 0xd6fc, 0xefbe, 0xdf3d,
  0xc65a, 0xadd8, 0x9d15, 0x73f0, 0x73cf, 0x9cf4, 0xa555, 0x73cf, 0x4228, 0x2965, 0x52aa, 0x840e, 0xa531, 0xc614, 0xd695, 0xd677,
  0xd677, 0xd675, 0xc5d4, 0xa4f1, 0x83ee, 0x528a, 0x2965, 0x4228, 0x73cf, 0xa555, 0x9cf4, 0x73cf, 0x73f0, 0x9d15, 0xadd8, 0xc65a,
  0xdf3d, 0xefbe, 0xd6fc, 0x8c92, 0xd6ba, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x94d3, 0xdf3d, 0xef9e, 0xd6dc, 0xbe19,
  0xa576, 0x8452, 0x73af, 0x94d4, 0xa535, 0x632d, 0x2965, 0x52aa, 0x94b0, 0xdf15, 0xf796, 0xf796, 0xf796, 0xf776, 0xf776, 0xe6d7,
  0xe6d7, 0xf736, 0xf716, 0xf6f6, 0xf6d6, 0xf6b6, 0xe635, 0x9471, 0x528a, 0x2965, 0x632d, 0xa535, 0x94d4, 0x73af, 0x8452, 0xa576,
  0xbe39, 0xd6fc, 0xef9e, 0xdf3d, 0x94d3, 0xce79, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd69a, 0x94d3, 0xe73d, 0xef9e, 0xcebb, 0xb5f8, 0x9d35,
  0x73f0, 0x8431, 0xad76, 0x738e, 0x2965, 0x632a, 0xbe32, 0xe774, 0xbdf6, 0xef95, 0xf795, 0xf797, 0xf797, 0xf798, 0xf776, 0xe718,
  0xe6f8, 0xf716, 0xf737, 0xf717, 0xf6d6, 0xf695, 0xf675, 0xc5d6, 0xee14, 0xc532, 0x62ca, 0x2965, 0x738e, 0xad76, 0x8431, 0x73f0,
  0x9d35, 0xb5f8, 0xcebb, 0xef9e, 0xe73d, 0x94d3, 0xd69a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdefb, 0x8c92, 0xdf1d, 0xef9e, 0xcebb, 0xb5d8, 0x9d14, 0x73af,
  0x94d3, 0x9cf4, 0x4208, 0x4228, 0xadd0, 0xdf73, 0xe773, 0xe774, 0xd6b6, 0xe738, 0xef95, 0xf7b7, 0xf7b8, 0xf797, 0xf755, 0xded6,
  0xe6d7, 0xf715, 0xf717, 0xf718, 0xf6b5, 0xf674, 0xe698, 0xd616, 0xedd3, 0xedb3, 0xed73, 0xbc90, 0x4208, 0x4208, 0x9cf4, 0x94d3,
  0x73af, 0x9d14, 0xb5d8, 0xcebb, 0xef9e, 0xdf1d, 0x8c92, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x8451, 0xd6db, 0xef9e, 0xcebb, 0xb5d8, 0x94f4, 0x73af, 0xa535,
  0x8451, 0x2966, 0x6bcb, 0xcf31, 0xd772, 0xdf72, 0xdf72, 0xe795, 0xef77, 0xce77, 0xef94, 0xef94, 0xf774, 0xf774, 0xf754, 0xde95,
  0xde95, 0xf6f4, 0xf6d4, 0xf6b4, 0xf674, 0xf654, 0xd637, 0xe636, 0xedb3, 0xedb4, 0xed52, 0xed12, 0xe4f1, 0x7b0b, 0x2966, 0x8451,
  0xa535, 0x73af, 0x94f4, 0xb5d8, 0xcebb, 0xef9e, 0xd6db, 0x8451, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x94b2, 0xbe39, 0xef9e, 0xd6bb, 0xb5d8, 0x94f4, 0x73cf, 0xa555, 0x7bcf,
  0x2965, 0x7c0e, 0xc750, 0xcf70, 0xd772, 0xe796, 0xe795, 0xdf72, 0xe772, 0xb5b4, 0xe753, 0xef73, 0xef73, 0xf773, 0xf754, 0xd694,
  0xd674, 0xf6d4, 0xf6b3, 0xee93, 0xee53, 0xee13, 0xb554, 0xedb2, 0xed72, 0xf5f5, 0xf616, 0xecd1, 0xecb1, 0xec90, 0x83ae, 0x2965,
  0x7bcf, 0xa555, 0x73cf, 0x94f4, 0xb5d8, 0xd6bb, 0xef9e, 0xbe39, 0x94b2, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xbdf7, 0x9d35, 0xe77e, 0xd6fc, 0xb5f8, 0x9d35, 0x73d0, 0xa535, 0x73cf, 0x2965,
  0x8d8d, 0xa630, 0xa591, 0xc750, 0xdf94, 0xd772, 0xd771, 0xdf71, 0xdf71, 0xc653, 0xce93, 0xef72, 0xef72, 0xef53, 0xef33, 0xd673,
  0xd653, 0xeed3, 0xee93, 0xee72, 0xee32, 0xd593, 0xcd73, 0xed71, 0xed31, 0xecf1, 0xed12, 0xec90, 0xec91, 0xb491, 0xc430, 0xb36d,
  0x2965, 0x73cf, 0xa535, 0x73d0, 0x9d35, 0xb5f8, 0xd6fc, 0xef7e, 0x9d35, 0xbdf8, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x8431, 0xd6dc, 0xe73d, 0xbe19, 0xa556, 0x7bf0, 0x9cf4, 0x8431, 0x2965, 0x856c,
  0xaf4e, 0xaf4e, 0xadf3, 0xa5f0, 0xc74f, 0xc74f, 0xcf50, 0xd750, 0xdf50, 0xdf31, 0xad92, 0xef71, 0xef71, 0xef52, 0xef32, 0xce52,
  0xce13, 0xeeb2, 0xee72, 0xee31, 0xedf1, 0xb513, 0xe551, 0xed30, 0xecf0, 0xecb0, 0xec6f, 0xec4f, 0xd575, 0xc534, 0xebce, 0xebae,
  0xab2c, 0x2965, 0x8431, 0x9cf4, 0x7bf0, 0xa556, 0xbe19, 0xe73d, 0xd6dc, 0x8431, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x9cf3, 0xadb7, 0xe77e, 0xc65a, 0xa576, 0x8472, 0x8c72, 0x9cf4, 0x2966, 0x6cab, 0x9f2d,
  0xa74e, 0xbf72, 0xc773, 0x9510, 0xae4f, 0xbf4e, 0xc74f, 0xcf4f, 0xd74f, 0xdf50, 0xad71, 0xdf10, 0xe730, 0xd691, 0xce31, 0xb592,
  0xb572, 0xcdd1, 0xd5d1, 0xe5f0, 0xe590, 0xacd2, 0xed30, 0xecef, 0xec8f, 0xec6f, 0xec2e, 0xcc0f, 0xa430, 0xebef, 0xe36d, 0xe36d,
  0xe36e, 0x92cb, 0x2966, 0x9cf4, 0x8c72, 0x8452, 0xa576, 0xc65a, 0xe77e, 0xadb7, 0x9cf3, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x7c11, 0xdefc, 0xd6bb, 0xad97, 0x94d4, 0x7bf0, 0xad76, 0x4208, 0x5368, 0x8f2c, 0x972c,
  0x9f2d, 0xb751, 0xa72d, 0xa70d, 0x8caf, 0xaeae, 0xbf4e, 0xc74e, 0xcf4e, 0xd72f, 0xad90, 0x9cd1, 0x9491, 0x9492, 0x9492, 0x9492,
  0x9492, 0x9492, 0x9492, 0x9491, 0x9c91, 0xb4b0, 0xe4cf, 0xec8e, 0xec4e, 0xec0e, 0xd3ee, 0x9bef, 0xe36d, 0xe34d, 0xe38e, 0xec72,
  0xe34e, 0xe32e, 0x6a29, 0x4208, 0xad76, 0x7bf0, 0x94d4, 0xad97, 0xd6bb, 0xdefc, 0x7c31, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf7be, 0x94b2, 0xad97, 0xe73d, 0xb5d8, 0x9d15, 0x73f0, 0x9d15, 0x6b8e, 0x31e6, 0x7ecb, 0x872b, 0x9f4f,
  0x972d, 0x972b, 0x972b, 0x9f2c, 0x9eac, 0x848e, 0xb6ed, 0xbf2d, 0xadee, 0x8c70, 0x8430, 0x8430, 0x8430, 0x8c51, 0x8c51, 0x8c51,
  0x8c51, 0x8c51, 0x8c51, 0x8430, 0x8430, 0x8430, 0x8c30, 0xbc2e, 0xe3ed, 0xdbad, 0x93ce, 0xd34c, 0xe30c, 0xe30c, 0xe30d, 0xec93,
  0xeb8f, 0xe2ed, 0xdb0e, 0x3986, 0x6b8e, 0x9d15, 0x73f0, 0x9d15, 0xb5d8, 0xe73d, 0xad96, 0x94b2, 0xf7be, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xef5d, 0x73cf, 0xcebb, 0xce9a, 0x9d35, 0x8472, 0x7c11, 0xa535, 0x2966, 0x5baa, 0x76ab, 0x8f2d, 0xaf72,
  0x872c, 0x870a, 0x8f0a, 0x970b, 0x9f2b, 0x964c, 0x848d, 0x84ae, 0x7bcf, 0x7bcf, 0x7bcf, 0x7bef, 0x7bef, 0x7bef, 0x8410, 0x8410,
  0x8410, 0x8410, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bcf, 0x7bcf, 0x93ae, 0x938e, 0xcb2c, 0xe2cb, 0xe2cb, 0xe2ab, 0xe2ac, 0xe2ac,
  0xe2ad, 0xe2ad, 0xd2ce, 0x72ab, 0x2966, 0xa535, 0x7c11, 0x8472, 0x9d35, 0xce9a, 0xcebb, 0x73cf, 0xef5d, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0xad75, 0x94d4, 0xdf1d, 0xadb7, 0x94d4, 0x73af, 0xa535, 0x630c, 0x3a86, 0x6e0b, 0x6c0c, 0x95b1, 0x8f2e,
  0x770a, 0x7f0a, 0x7f0a, 0x870a, 0x8f0a, 0x96aa, 0x73cd, 0x6b6d, 0x738e, 0x738e, 0x738e, 0x73ae, 0x73ae, 0x73ae, 0x73ae, 0x73ae,
  0x73ae, 0x73ae, 0x73ae, 0x73ae, 0x73ae, 0x738e, 0x738e, 0x738e, 0x6b6d, 0x7b4d, 0xd2aa, 0xe28a, 0xe28b, 0xe28b, 0xe28c, 0xe28c,
  0xe30f, 0xccd4, 0x832d, 0xc2ce, 0x51a7, 0x630c, 0xa535, 0x73af, 0x94d4, 0xadb7, 0xdf1d, 0x94d4, 0xad75, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf79e, 0x7bf0, 0xb5f8, 0xcebb, 0x9d15, 0x8452, 0x7bf0, 0xa555, 0x2966, 0x4d48, 0x5f09, 0x6f0b, 0x656a, 0x63eb,
  0x65aa, 0x6f09, 0x7709, 0x7f09, 0x7ea9, 0x6bac, 0x632c, 0x632c, 0x632c, 0x6b4d, 0x6b4d, 0x6b4d, 0x6b6d, 0x6b6d, 0x6b6d, 0x6b6d,
  0x6b6d, 0x6b6d, 0x6b6d, 0x6b6d, 0x6b4d, 0x6b4d, 0x6b4d, 0x6b4d, 0x632c, 0x632c, 0x730c, 0xd26a, 0xe24b, 0xe24b, 0xe24c, 0xb28c,
  0x7aec, 0xcc53, 0xe2f0, 0xe24f, 0xaa2c, 0x2966, 0xa555, 0x7bf0, 0x8452, 0x9515, 0xcebb, 0xb5f8, 0x7bf0, 0xf79e, 0xffff, 0xffff,
  0xffff, 0xffff, 0xe71c, 0x73cf, 0xd6db, 0xb5f8, 0x8c93, 0x73d0, 0x94d4, 0x73af, 0x2a05, 0x4ee8, 0x5709, 0x9771, 0x6f0b, 0x5ea8,
  0x5caa, 0x5bea, 0x6629, 0x6ee8, 0x63ea, 0x5aeb, 0x5aeb, 0x5aeb, 0x5aeb, 0x630c, 0x630c, 0x630c, 0x630c, 0x632c, 0x632c, 0x632c,
  0x632c, 0x632c, 0x632c, 0x632c, 0x630c, 0x630c, 0x630c, 0x5aeb, 0x5aeb, 0x5aeb, 0x5aeb, 0x7aab, 0xda0b, 0xc24b, 0x7aab, 0x928c,
  0xd22d, 0xe20e, 0xe20f, 0xe20f, 0xda30, 0x4166, 0x73af, 0x94d4, 0x73d0, 0x8c93, 0xb5f8, 0xd6db, 0x73af, 0xe71c, 0xffff, 0xffff,
  0xffff, 0xffdf, 0xb5b6, 0x8c92, 0xdf1c, 0xa535, 0x8452, 0x6b8e, 0xad96, 0x4228, 0x3c26, 0x46e7, 0x672b, 0x8f50, 0x4ee7, 0x4ee7,
  0x4ee7, 0x5648, 0x53e9, 0x5baa, 0x52aa, 0x52aa, 0x52aa, 0x52aa, 0x5acb, 0x5acb, 0x5acb, 0x5acb, 0x5acb, 0x5acb, 0x5aeb, 0x5aeb,
  0x5aeb, 0x5aeb, 0x5acb, 0x5acb, 0x5acb, 0x5acb, 0x5acb, 0x5acb, 0x52aa, 0x52aa, 0x52aa, 0x52aa, 0x728b, 0x7a6b, 0xca0d, 0xd9ed,
  0xd9ee, 0xd9ef, 0xe2b1, 0xe313, 0xd9f0, 0x81ab, 0x4228, 0xad96, 0x6b8f, 0x8452, 0xa556, 0xdf1c, 0x8c92, 0xb5b6, 0xffdf, 0xffff,
  0xffff, 0xf7be, 0x8c71, 0xa576, 0xd6db, 0x94d4, 0x7c11, 0x7bf0, 0x9d15, 0x2965, 0x35e6, 0x3ee6, 0x4708, 0x5f0a, 0x3ee6, 0x3ee6,
  0x46e6, 0x46e6, 0x4ea6, 0x52c9, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a,
  0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x5a6a, 0xd1ad, 0xd9ae, 0xd9ae,
  0xd9af, 0xd9af, 0xe292, 0xebb5, 0xd9b1, 0xb9af, 0x2965, 0x9d15, 0x7bf0, 0x7c11, 0x94d4, 0xd6db, 0xa556, 0x8c71, 0xf7be, 0xffff,
  0xffff, 0xef5d, 0x73af, 0xbe19, 0xc65a, 0x8c93, 0x73d0, 0x8c92, 0x7c10, 0x29e5, 0x36e6, 0x3ee7, 0x5f2b, 0x36e6, 0x36e6, 0x36e6,
  0x36e6, 0x36e6, 0x44e7, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69,
  0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x4a69, 0x99ec, 0xd98f, 0xd98f,
  0xd990, 0xd990, 0xd991, 0xd9b2, 0xd992, 0xd992, 0x3946, 0x7c10, 0x8c92, 0x73d0, 0x8c93, 0xc65a, 0xbe19, 0x73af, 0xef5d, 0xffff,
  0xffff, 0xe71c, 0x6b8e, 0xce9a, 0xb5d8, 0x8452, 0x6b8f, 0xa535, 0x632c, 0x2aa5, 0x2e46, 0x4709, 0x7f4f, 0x2ee5, 0x2ee5, 0x2ee5,
  0x2ee5, 0x2ee5, 0x4308, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228,
  0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x4228, 0x620a, 0xd950, 0xd951,
  0xd951, 0xd952, 0xd952, 0xd9b3, 0xd9b3, 0xc971, 0x5168, 0x632c, 0xa535, 0x6b8f, 0x8452, 0xb5d8, 0xce9a, 0x6b8e, 0xe71c, 0xffff,
  0xffff, 0xdedb, 0x6baf, 0xd6db, 0xad76, 0x8431, 0x636e, 0xad97, 0x4a6a, 0x2ae6, 0x3ba7, 0x640c, 0x7caf, 0x33e7, 0x34c6, 0x2da6,
  0x2685, 0x2645, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208,
  0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0xc931, 0xd131,
  0xb150, 0x998e, 0x79ac, 0x9411, 0x834f, 0x71cc, 0x596a, 0x4a6a, 0xad97, 0x636e, 0x8432, 0xad76, 0xd6db, 0x6baf, 0xdedb, 0xffff,
  0xffdf, 0xce59, 0x73d0, 0xd6fc, 0x9d35, 0x7c31, 0x6b8e, 0xb5b7, 0x39e7, 0x1cc5, 0x1ec6, 0x2ec7, 0x36c8, 0x25c6, 0x2ce6, 0x2c06,
  0x3327, 0x3a87, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7,
  0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x51c9, 0x61ab,
  0x816d, 0x994f, 0xb932, 0xd9f6, 0xda16, 0xd8f5, 0x98ef, 0x39e7, 0xb5b7, 0x6b8e, 0x7c31, 0xa535, 0xd6fc, 0x73f0, 0xce59, 0xffdf,
  0xffdf, 0xbdd7, 0x7c11, 0xdefc, 0x9d15, 0x7c11, 0x73af, 0xb5d7, 0x3186, 0x1544, 0x0ea4, 0x3eea, 0x2ec7, 0x1ec6, 0x1ec6, 0x1ec6,
  0x1ec6, 0x2c86, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7,
  0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x39c7, 0x914e, 0xd8d5,
  0xd8d5, 0xd8d5, 0xd8d6, 0xd8b6, 0xd895, 0xd075, 0xa891, 0x3186, 0xb5d7, 0x73af, 0x7c11, 0x9d15, 0xdefc, 0x7c11, 0xbdd7, 0xffdf,
  0xffdf, 0xb596, 0x7c31, 0xdefc, 0x9cf4, 0x7c11, 0x73cf, 0xb5b7, 0x2986, 0x1585, 0x0ea5, 0x672e, 0x2ee9, 0x0ea5, 0x0ea5, 0x0ea6,
  0x16c6, 0x2406, 0x3186, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6,
  0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x31a6, 0x812e, 0xd896,
  0xd896, 0xd076, 0xd056, 0xd937, 0xe259, 0xd056, 0xb093, 0x2986, 0xb5b7, 0x73cf, 0x7c11, 0x9cf4, 0xdefc, 0x7c31, 0xb596, 0xffdf,
  0xf7be, 0xb596, 0x7c31, 0xdefc, 0x9cf4, 0x7c11, 0x73cf, 0xb5d7, 0x2986, 0x1586, 0x0ea6, 0x570e, 0x3eeb, 0x0ea7, 0x0ea7, 0x0ea7,
  0x0ea7, 0x1bc6, 0x2945, 0x2945, 0x2945, 0x2945, 0x2965, 0x2965, 0x2965, 0x2965, 0x2965, 0x2965, 0x3186, 0x3186, 0x3186, 0x3186,
  0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0x2965, 0x2965, 0x2965, 0x2965, 0x2965, 0x2965, 0x2945, 0x2945, 0x2945, 0x78ce, 0xd058,
  0xd058, 0xd058, 0xd058, 0xd979, 0xe35b, 0xd058, 0xb093, 0x2986, 0xb5d7, 0x73cf, 0x7c11, 0x9cf4, 0xdefc, 0x7c31, 0xb596, 0xf7be,
  0xf7be, 0xb5b6, 0x7c10, 0xd6fc, 0x9d15, 0x7c11, 0x73cf, 0xbdf8, 0x3186, 0x1547, 0x0ea8, 0x1ec9, 0x16c9, 0x0ea8, 0x0ea8, 0x0ea8,
  0x0ea8, 0x1c27, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945,
  0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x80d0, 0xd059,
  0xd059, 0xd059, 0xd059, 0xd079, 0xd8d9, 0xd059, 0xa893, 0x3186, 0xbdf8, 0x73cf, 0x7c11, 0x9d15, 0xd6fc, 0x7c10, 0xb5b6, 0xf7be,
  0xffdf, 0xc618, 0x73cf, 0xd6fc, 0x9d35, 0x7c31, 0x6b8f, 0xbe18, 0x39e8, 0x14c7, 0x0ea9, 0x2eec, 0x2ecc, 0x0e49, 0x1548, 0x1447,
  0x1b66, 0x2205, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945,
  0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x4108, 0x68ed,
  0x88b1, 0xa895, 0xc878, 0xd05a, 0xd05a, 0xd05a, 0x98b2, 0x39e8, 0xbe18, 0x6baf, 0x7c31, 0x9d35, 0xd6fc, 0x73cf, 0xc618, 0xffdf,
  0xffdf, 0xce59, 0x6b6e, 0xd6db, 0xa576, 0x7c31, 0x636e, 0xc619, 0x528a, 0x1b06, 0x1ba7, 0x53ec, 0x63ed, 0x1aa6, 0x1ba8, 0x14a9,
  0x0d8a, 0x0dcb, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945,
  0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0x2945, 0xb077, 0xa876,
  0x90b2, 0x70ce, 0x50ea, 0x72ae, 0x720e, 0x70ce, 0x610c, 0x528a, 0xc619, 0x636e, 0x7c31, 0xa576, 0xd6db, 0x6b6e, 0xce59, 0xffdf,
  0xffdf, 0xd69a, 0x634d, 0xce7a, 0xb5d8, 0x8452, 0x636e, 0xb5d7, 0x6b4d, 0x2266, 0x154a, 0x266d, 0x5f12, 0x0eac, 0x0eac, 0x0ead,
  0x0ead, 0x0eae, 0x2206, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x3908, 0xc05a, 0xc05a,
  0xc85a, 0xc85a, 0xc85a, 0xe37c, 0xc999, 0xa095, 0x4929, 0x6b4d, 0xb5d7, 0x636e, 0x8452, 0xb5d8, 0xce7a, 0x634d, 0xd69a, 0xffdf,
  0xffff, 0xdedb, 0x634d, 0xbdf8, 0xc639, 0x8c93, 0x6baf, 0xa535, 0x8c71, 0x2a26, 0x0eac, 0x16ad, 0x16ae, 0x0eae, 0x0eae, 0x0eae,
  0x0eaf, 0x0eb0, 0x1c0a, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x70d0, 0xb85a, 0xb85a,
  0xc05a, 0xc05a, 0xc05a, 0xd25c, 0xc8db, 0xc85a, 0x4148, 0x8c71, 0xa535, 0x6baf, 0x8c93, 0xc639, 0xbdf8, 0x634d, 0xdedb, 0xffff,
  0xffff, 0xe71c, 0x73ae, 0x9d35, 0xd6bb, 0x94d4, 0x73f0, 0x8c92, 0xb5b7, 0x3186, 0x0dec, 0x0eae, 0x3ef2, 0x36f2, 0x0eaf, 0x0eb0,
  0x0eb0, 0x0eb1, 0x0e31, 0x2165, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2925, 0x9878, 0xa85a, 0xb05a,
  0xb85a, 0xb85a, 0xc09a, 0xc05a, 0xc05a, 0xa877, 0x3186, 0xb5b7, 0x8c92, 0x73f0, 0x94d4, 0xd6bb, 0x9d35, 0x73ae, 0xe71c, 0xffff,
  0xffff, 0xef7d, 0x9492, 0x8451, 0xdefc, 0x9d35, 0x8452, 0x73cf, 0xce9a, 0x4a49, 0x1c2a, 0x0eaf, 0x46f3, 0x4714, 0x0eb1, 0x0eb1,
  0x0eb2, 0x0e31, 0x1b6a, 0x21e7, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x3107, 0x50cd, 0x9878, 0xa85a,
  0xa85a, 0xb05a, 0xc21b, 0xc17b, 0xb85a, 0x78d0, 0x4a49, 0xce9a, 0x73cf, 0x7c31, 0x9d35, 0xdefc, 0x8451, 0x9492, 0xef7d, 0xffff,
  0xffff, 0xf7be, 0xbdd7, 0x634d, 0xcebb, 0xb5d8, 0x8c93, 0x6b8f, 0xbe18, 0x8410, 0x2a67, 0x0eb0, 0x0eb1, 0x5f16, 0x1ed3, 0x0e92,
  0x142c, 0x2247, 0x14f0, 0x0e95, 0x2228, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x3108, 0x885a, 0x6893, 0x3909, 0x68b0,
  0xa05a, 0xb11b, 0xcadc, 0xb0ba, 0xb05a, 0x4149, 0x8410, 0xbe18, 0x6b8f, 0x8c93, 0xb5d8, 0xcebb, 0x634d, 0xbdd7, 0xf7be, 0xffff,
  0xffff, 0xffdf, 0xd69a, 0x632d, 0xb5d8, 0xce9b, 0x94f4, 0x7c11, 0x94d3, 0xc618, 0x31a7, 0x154e, 0x0eb2, 0x0eb3, 0x1d70, 0x1a47,
  0x140d, 0x0e95, 0x0eb6, 0x0eb7, 0x0df5, 0x21a6, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2906, 0x6877, 0x785a, 0x885a, 0x885a, 0x60b0,
  0x38e9, 0x80d4, 0xb19b, 0xa85a, 0x8895, 0x31a7, 0xc618, 0x94d3, 0x7c11, 0x94f4, 0xce9b, 0xb5d8, 0x632d, 0xd69a, 0xffdf, 0xffff,
  0xffff, 0xffff, 0xe73c, 0x8430, 0x8c72, 0xdf1c, 0xad97, 0x8c93, 0x73cf, 0xd6ba, 0x6b6e, 0x22c9, 0x0dd1, 0x1ac9, 0x7533, 0x3675,
  0x0eb6, 0x0eb6, 0x0eb7, 0x0eb8, 0x0eb9, 0x0d95, 0x2186, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2906, 0x5076, 0x685a, 0x705a, 0x785a, 0x805a, 0x885a,
  0x9139, 0x620d, 0x48eb, 0x8877, 0x492b, 0x6b6e, 0xd6ba, 0x73cf, 0x8c93, 0xad97, 0xdf1c, 0x8c92, 0x8430, 0xe73c, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf79e, 0xb5b6, 0x634d, 0xce9b, 0xc67a, 0x9d15, 0x7c31, 0xa555, 0xc618, 0x31c7, 0x2247, 0x0d91, 0x36f7, 0x5719,
  0x1ed7, 0x0eb7, 0x0eb8, 0x0eb9, 0x0eb9, 0x0dd6, 0x1a49, 0x2208, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2908, 0x28e9, 0x4877, 0x605a, 0x685a, 0x705a, 0x785a, 0x80ba,
  0xb2fc, 0x993b, 0x7876, 0x3909, 0x31c7, 0xc618, 0xa555, 0x7c31, 0x9d15, 0xc67a, 0xce9b, 0x634d, 0xb5b6, 0xf79e, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0xd6ba, 0x6b6d, 0x9d35, 0xdf1d, 0xadb7, 0x94d4, 0x7bf0, 0xd6bb, 0x7c10, 0x2a28, 0x0e75, 0x0eb6, 0x26d8,
  0x0eb7, 0x0eb8, 0x0eb9, 0x0eb9, 0x0e38, 0x1a49, 0x0db7, 0x0dfa, 0x136f, 0x2145, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2124, 0x2105, 0x28af, 0x305a, 0x3877, 0x28e9, 0x5078, 0x605a, 0x685a, 0x705a, 0x813b,
  0x9a3c, 0x805a, 0x8059, 0x3968, 0x7c10, 0xd6bb, 0x7bf0, 0x94d4, 0xadb7, 0xdf1d, 0x9d35, 0x6b6d, 0xd6ba, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xef5d, 0xa534, 0x6b8e, 0xd6db, 0xce9b, 0xa576, 0x8472, 0x9d14, 0xdedb, 0x4a69, 0x1b8c, 0x0eb7, 0x0eb7,
  0x471a, 0x46fa, 0x0eb9, 0x0e99, 0x1a8a, 0x1515, 0x0e3a, 0x0dfa, 0x0d9a, 0x0cd8, 0x1a4b, 0x2125, 0x2124, 0x2124, 0x2124, 0x2124,
  0x2124, 0x2124, 0x2124, 0x2124, 0x2105, 0x18cb, 0x1878, 0x205a, 0x305a, 0x385a, 0x3895, 0x28ea, 0x505a, 0x605a, 0x819b, 0x705a,
  0x705a, 0x785a, 0x48ee, 0x4a69, 0xdedb, 0x9cf4, 0x8472, 0xa576, 0xce9b, 0xd6db, 0x6b8e, 0xa534, 0xef5d, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffdf, 0xce79, 0x6b6d, 0xa555, 0xe75d, 0xbe39, 0x9d35, 0x7c10, 0xc639, 0xbdf7, 0x39c7, 0x14b0, 0x0eb8,
  0x0eb9, 0x3efb, 0x3efb, 0x1b2c, 0x1451, 0x0e5a, 0x0e1a, 0x0dba, 0x0d7a, 0x0d1a, 0x1a4b, 0x0b97, 0x0b37, 0x1252, 0x11cf, 0x196a,
  0x192a, 0x112f, 0x10f2, 0x0897, 0x0877, 0x18cb, 0x185a, 0x205a, 0x285a, 0x305a, 0x385a, 0x38b1, 0x30cc, 0x7a1b, 0x79bb, 0x70db,
  0x685a, 0x58b2, 0x39c7, 0xbdf7, 0xc639, 0x7c10, 0x9d35, 0xbe39, 0xe75d, 0xa555, 0x6b6d, 0xce79, 0xffdf, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0xad55, 0x636e, 0xce9b, 0xdf1c, 0xb5f8, 0x94d4, 0x7c31, 0xdefb, 0x9cf4, 0x31c7, 0x1533,
  0x0eb9, 0x1eda, 0x2430, 0x2b8e, 0x167a, 0x0e1a, 0x0dda, 0x0d9a, 0x0d3a, 0x0c99, 0x19c9, 0x0bfa, 0x0b7a, 0x0afa, 0x0a9a, 0x11b1,
  0x1151, 0x093a, 0x08da, 0x089a, 0x085a, 0x18e9, 0x1059, 0x185a, 0x205a, 0x285a, 0x305a, 0x407a, 0x30ce, 0x72d5, 0x587a, 0x605a,
  0x5094, 0x31a7, 0x9cf4, 0xdefb, 0x7c31, 0x94d4, 0xb5f8, 0xdf1c, 0xce9b, 0x636e, 0xad55, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xd69a, 0x7bcf, 0x8c92, 0xe75d, 0xd6db, 0xadb7, 0x8c93, 0x8c92, 0xe73d, 0x8c71, 0x31e7,
  0x1534, 0x14f3, 0x1aab, 0x46bb, 0x6efc, 0x2e3b, 0x0dba, 0x0d7a, 0x0d1a, 0x1351, 0x12d0, 0x0bda, 0x0b7a, 0x0afa, 0x0a7a, 0x11b1,
  0x1151, 0x093a, 0x08da, 0x089a, 0x085a, 0x10b0, 0x1891, 0x185a, 0x205a, 0x285a, 0x495b, 0x6a3b, 0x48da, 0x28cb, 0x4093, 0x4894,
  0x3187, 0x8c71, 0xe73d, 0x8c92, 0x8c93, 0xadb7, 0xd6db, 0xe75d, 0x8c92, 0x7bcf, 0xd69a, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xbdd7, 0x632c, 0xadb7, 0xef7e, 0xce9b, 0xad97, 0x8472, 0x94f4, 0xef5d, 0x8c71,
  0x31c7, 0x2208, 0x0e39, 0x0e5a, 0x365b, 0x465b, 0x0d9a, 0x257b, 0x0cfa, 0x19e9, 0x0bd8, 0x0bba, 0x0b5a, 0x0ada, 0x0a7a, 0x11b1,
  0x1151, 0x093a, 0x08fa, 0x089a, 0x087a, 0x0858, 0x18e9, 0x105a, 0x207a, 0x393b, 0x7b3c, 0x491b, 0x385a, 0x4059, 0x2908, 0x31a7,
  0x8c71, 0xef5d, 0x94d3, 0x8472, 0xad97, 0xce9b, 0xef7e, 0xadb7, 0x632c, 0xbdd7, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0xa514, 0x634d, 0xc65a, 0xe77e, 0xc67a, 0xa576, 0x8452, 0x9cf4, 0xef7d,
  0xa514, 0x39c7, 0x1b6e, 0x0df9, 0x0dfa, 0x0dba, 0x2ddb, 0x6e3c, 0x4d5a, 0x2a8d, 0x0c1a, 0x0b9a, 0x0b3a, 0x0ada, 0x0a5a, 0x11b1,
  0x1151, 0x093a, 0x08fa, 0x08ba, 0x087a, 0x085a, 0x39ee, 0x5279, 0x525b, 0x205a, 0x309a, 0x305a, 0x3059, 0x30ee, 0x39c7, 0xa514,
  0xef7d, 0x9cf4, 0x8452, 0xa576, 0xc67a, 0xe77e, 0xc65a, 0x634d, 0xa514, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xd6ba, 0x8c51, 0x73cf, 0xcebb, 0xe75e, 0xc67a, 0xa576, 0x8452, 0x94b3,
  0xe75d, 0xc638, 0x4a8a, 0x2a29, 0x1494, 0x0d9a, 0x0d3a, 0x151a, 0x4413, 0x1333, 0x3cbb, 0x653c, 0x445b, 0x0ada, 0x1adb, 0x2a53,
  0x29f2, 0x095a, 0x29fb, 0x4a9c, 0x423b, 0x085a, 0x5ad7, 0x41f1, 0x185a, 0x185a, 0x205a, 0x2894, 0x3169, 0x4a8a, 0xc638, 0xe75d,
  0x94b3, 0x8452, 0xa576, 0xc67a, 0xe75e, 0xcebb, 0x73cf, 0x8c51, 0xd6ba, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0xce59, 0x7bcf, 0x7c10, 0xd6db, 0xe77e, 0xce9a, 0xad97, 0x8472,
  0x8431, 0xd6bb, 0xef5d, 0x8430, 0x39c7, 0x228b, 0x0c35, 0x0cda, 0x19c8, 0x0c19, 0x1c1a, 0x345b, 0x33fb, 0x0aba, 0x3b9b, 0x63f6,
  0x4af3, 0x095a, 0x3a7b, 0x52dc, 0x297b, 0x087a, 0x0859, 0x18e8, 0x105a, 0x1875, 0x292b, 0x39c7, 0x8430, 0xef5d, 0xd6bb, 0x8451,
  0x8c72, 0xad97, 0xce9a, 0xe77e, 0xd6db, 0x7c10, 0x7bcf, 0xce59, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xc618, 0x73ae, 0x7c10, 0xcebb, 0xef7e, 0xcebb, 0xadb7,
  0x8cb3, 0x7bf0, 0xad76, 0xef9e, 0xd6ba, 0x73ae, 0x39c7, 0x2a09, 0x19c9, 0x0bb8, 0x0bba, 0x0b5a, 0x0afa, 0x0aba, 0x0a5a, 0x11b1,
  0x1151, 0x095a, 0x091a, 0x08da, 0x089a, 0x087a, 0x0858, 0x20e9, 0x2949, 0x39c7, 0x73ae, 0xd6ba, 0xef7e, 0xad76, 0x7bf0, 0x8cb3,
  0xadb7, 0xcebb, 0xef7e, 0xcebb, 0x7c10, 0x73ae, 0xc618, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xbdf7, 0x73ae, 0x73cf, 0xc65a, 0xef7e, 0xd6fc,
  0xbe19, 0x9d15, 0x8451, 0x8431, 0xbe18, 0xf7be, 0xdedb, 0x9492, 0x4a6a, 0x31a7, 0x29ea, 0x1a2e, 0x1231, 0x1234, 0x0a16, 0x118f,
  0x114f, 0x0956, 0x1114, 0x1111, 0x192e, 0x296a, 0x31a7, 0x4a6a, 0x9492, 0xdedb, 0xf7be, 0xbe18, 0x8431, 0x8451, 0x9d15, 0xbe19,
  0xd6fc, 0xef7e, 0xc65a, 0x73cf, 0x73ae, 0xbdf7, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xc618, 0x8410, 0x634d, 0xadb7, 0xe75d,
  0xe75d, 0xce9a, 0xadb7, 0x94d3, 0x7c31, 0x8431, 0xb5d7, 0xef5d, 0xffdf, 0xd69a, 0xa514, 0x7bcf, 0x5acb, 0x4208, 0x39c7, 0x39c7,
  0x39c7, 0x39c7, 0x4208, 0x5acb, 0x7bcf, 0xa514, 0xd69a, 0xffdf, 0xef5d, 0xb5d7, 0x8431, 0x7c31, 0x94d3, 0xadb7, 0xc67a, 0xe73d,
  0xe75d, 0xadb7, 0x634d, 0x8410, 0xc618, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xce59, 0x9492, 0x5b0c, 0x94d3,
  0xd6db, 0xef7e, 0xdf1c, 0xc659, 0xad96, 0x94d3, 0x8431, 0x73f0, 0x94b3, 0xb5d7, 0xdedb, 0xf7be, 0xffdf, 0xffdf, 0xf79e, 0xef5d,
  0xef5d, 0xf79e, 0xffdf, 0xffdf, 0xf7be, 0xdedb, 0xb5d7, 0x94b3, 0x73f0, 0x8431, 0x94d3, 0xa596, 0xc65a, 0xdf1c, 0xef7e, 0xd6db,
  0x94d3, 0x5b0c, 0x9492, 0xce59, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0xd6ba, 0xa534, 0x6b4d,
  0x6b8e, 0xad97, 0xdf1c, 0xef7e, 0xdf1c, 0xc65a, 0xadb7, 0x9d15, 0x8c93, 0x8451, 0x7c10, 0x73d0, 0x8451, 0x94b3, 0x9d14, 0xa535,
  0xa535, 0x9d14, 0x94b3, 0x8451, 0x73d0, 0x7c10, 0x8451, 0x8c93, 0x9d15, 0xadb7, 0xc65a, 0xdf1c, 0xef7e, 0xdf1d, 0xad97, 0x6b8e,
  0x6b4d, 0xa534, 0xd6ba, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe71c, 0xbdf7,
  0x8c51, 0x5b0c, 0x7bf0, 0xadb7, 0xdf1c, 0xef7e, 0xe73d, 0xd6db, 0xbe39, 0xb5d7, 0xa556, 0x9d15, 0x94d3, 0x8cb3, 0x8c92, 0x8c72,
  0x8472, 0x8c92, 0x8c93, 0x94d3, 0x9d14, 0xa556, 0xb5d7, 0xc659, 0xd6db, 0xe73d, 0xef7e, 0xdf1c, 0xadb7, 0x7bf0, 0x5b0c, 0x8c51,
  0xbdf7, 0xe71c, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e,
  0xd6ba, 0xad75, 0x8410, 0x5aec, 0x73af, 0x9d35, 0xc67a, 0xe73d, 0xef7e, 0xe75d, 0xdf1d, 0xd6db, 0xce9b, 0xc65a, 0xbe39, 0xbe39,
  0xbe39, 0xbe39, 0xc65a, 0xce9b, 0xd6db, 0xdf1d, 0xe75d, 0xef7e, 0xe73d, 0xc67a, 0x9d35, 0x73af, 0x5aec, 0x8410, 0xad75, 0xd6ba,
  0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0xef5d, 0xd69a, 0xad75, 0x8c51, 0x632c, 0x630c, 0x7bf0, 0x9d14, 0xb5f8, 0xce9b, 0xdf1c, 0xe75d, 0xe77e, 0xef7e, 0xef7e,
  0xef7e, 0xef7e, 0xe77e, 0xe75d, 0xdf1c, 0xce9b, 0xb5f8, 0x9d14, 0x7bf0, 0x5b0c, 0x632c, 0x8c51, 0xad75, 0xd69a, 0xef5d, 0xffdf,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0xef7d, 0xd6ba, 0xbdd7, 0x9cf3, 0x8410, 0x634d, 0x5aec, 0x632c, 0x6b8e, 0x7c10, 0x8472, 0x94d3, 0x94f4,
  0x94f4, 0x8cd3, 0x8472, 0x7c10, 0x6b8e, 0x632c, 0x5aec, 0x634d, 0x8410, 0x9cf3, 0xbdd7, 0xd6ba, 0xef7d, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf79e, 0xe73c, 0xd6ba, 0xc618, 0xad75, 0x9cf3, 0x8c71, 0x8410, 0x73ae, 0x6b6d, 0x6b4d,
  0x6b4d, 0x6b6d, 0x73ae, 0x8410, 0x8c71, 0x9cf3, 0xad75, 0xc618, 0xd6ba, 0xe73c, 0xf79e, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7be, 0xef7d, 0xe73c, 0xdefb, 0xd6ba, 0xce79, 0xce59, 0xc638,
  0xc638, 0xce59, 0xce79, 0xd6ba, 0xdefb, 0xe73c, 0xef7d, 0xf7be, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffdf,
  0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'Temp1', 32x32px
const uint16_t epd_bitmap_Temp1[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0x632c, 0x632c, 0x632c, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef7d, 0x632c, 0x632c, 0x632c, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf,
  0xa514, 0x630c, 0x632c, 0x632c, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514,
  0x8410, 0x94b2, 0xbdd7, 0xce79, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x840f,
  0x94b2, 0xce79, 0xe71c, 0xef7d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x83ef, 0x9492,
  0xce79, 0xef5d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad55, 0x840f, 0x9cb2, 0xce79,
  0xef5d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x738e, 0x52aa, 0x528a, 0x5aeb, 0x94b2, 0xbe5a, 0xae5b,
  0x961b, 0x961b, 0x961b, 0x961b, 0x961b, 0x961b, 0x9e3b, 0xb69c, 0xd71d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x738e, 0x94b2, 0xd69a, 0xd69a, 0x9492, 0x636e, 0x85fb, 0x5d39,
  0x4cb7, 0x3476, 0x3c76, 0x3c76, 0x3c76, 0x3476, 0x4cd8, 0x5cf8, 0x7579, 0x8dfa, 0xae7b, 0xd71d, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x52aa, 0xd69a, 0xce59, 0xce59, 0xd69a, 0x5269, 0x3c56, 0x5cd7,
  0x8d56, 0x9d97, 0xbdd7, 0xbdf7, 0xb5d7, 0xa597, 0x7d16, 0x5cd6, 0x3c77, 0x3c76, 0x4cd7, 0x6d59, 0x8dda, 0xbedc, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x528a, 0xd69a, 0xce59, 0xce59, 0xd69a, 0x5a89, 0xbdd7, 0xce59,
  0xd6ba, 0xe71c, 0xe73c, 0xef5d, 0xe73c, 0xdefb, 0xd69a, 0xce59, 0xbdf7, 0x8d56, 0x54b7, 0x3c77, 0x3c77, 0x6538, 0x85da, 0xffdf,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa534, 0x5aeb, 0x9492, 0xd69a, 0xd69a, 0x94b2, 0x6b2c, 0xdedb, 0xef7d,
  0xf7be, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7be, 0xef7d, 0xe73c, 0xdedb, 0xc638, 0xa597, 0x54b7, 0x3c77, 0x3c97, 0xef7d,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x840f, 0x94b2, 0x5b4e, 0x5269, 0x528a, 0x6b2c, 0xce79, 0xf79e, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xef7d, 0xdefb, 0xce59, 0x9d77, 0x4497, 0xef5d,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x8410, 0x9cb2, 0xadf8, 0x75db, 0x34b8, 0xb596, 0xce79, 0xe73c, 0xffdf, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xef7d, 0xdedb, 0xd6ba, 0xef7d,
  0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x8410, 0x94b2, 0xce59, 0x95da, 0x54f8, 0x6d17, 0xdedb, 0xef7d, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xf79e, 0xffdf,
  0xffff, 0xffff, 0xffdf, 0xa534, 0x8410, 0x94b2, 0xce79, 0xdefb, 0x759a, 0x4497, 0xbe39, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0x632c, 0x632c, 0x630c, 0x9cd2, 0xce79, 0xef5d, 0xcedc, 0x6d59, 0x3c77, 0xdefb, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef7d, 0x632c, 0x632c, 0x632c, 0xce79, 0xef5d, 0xf7be, 0xa63a, 0x5d18, 0x64f7, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xfffb, 0x91c0, 0x01d2, 0xdfff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef5d, 0x632c, 0x632c, 0x632c, 0xe71c, 0xffdf, 0xf7be, 0x8db9, 0x54f8, 0x8558, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xfff6, 0x6007, 0x95b2, 0x39d2, 0xdfff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef7d, 0xce79, 0xbdf7, 0xce79, 0xef7d, 0xffff, 0xf79e, 0x7d79, 0x54d8, 0x9dd9, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfed2, 0x39d2, 0xdfff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0xef7d, 0xef5d, 0xef7d, 0xffdf, 0xffff, 0xef7d, 0x7578, 0x44b7, 0xbe5a, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfed2, 0x39d2, 0xdfff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x5d38, 0x44b7, 0xbe7a, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfed2, 0x39d2, 0xdfff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x5d18, 0x44b7, 0xbe9b, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfed2, 0x39d2, 0xdfff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x5cf8, 0x4497, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfed2, 0x39d2, 0xdfff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x54f8, 0x44b7, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xfff6, 0x6000, 0x0000, 0x0000, 0x0000, 0x65bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x54d8, 0x3c97, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x4cd7, 0x3c97, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x4cb7, 0x3c97, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x44b7, 0x3c97, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x4497, 0x4497, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xce79, 0xce79, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'Temp2', 32x32px
const uint16_t epd_bitmap_Temp2[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0x632c, 0x632c, 0x632c, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef7d, 0x632c, 0x632c, 0x632c, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf,
  0xa514, 0x630c, 0x632c, 0x632c, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514,
  0x8410, 0x94b2, 0xbdd7, 0xce79, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x840f,
  0x94b2, 0xce79, 0xe71c, 0xef7d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x83ef, 0x9492,
  0xce79, 0xef5d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad55, 0x840f, 0x9cb2, 0xce79,
  0xef5d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x738e, 0x52aa, 0x528a, 0x5aeb, 0x94b2, 0xbe5a, 0xae5b,
  0x961b, 0x961b, 0x961b, 0x961b, 0x961b, 0x961b, 0x9e3b, 0xb69c, 0xd71d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x738e, 0x94b2, 0xd69a, 0xd69a, 0x9492, 0x636e, 0x85fb, 0x5d39,
  0x4cb7, 0x3476, 0x3c76, 0x3c76, 0x3c76, 0x3476, 0x4cd8, 0x5cf8, 0x7579, 0x8dfa, 0xae7b, 0xd71d, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x52aa, 0xd69a, 0xce59, 0xce59, 0xd69a, 0x5269, 0x3c56, 0x5cd7,
  0x8d56, 0x9d97, 0xbdd7, 0xbdf7, 0xb5d7, 0xa597, 0x7d16, 0x5cd6, 0x3c77, 0x3c76, 0x4cd7, 0x6d59, 0x8dda, 0xbedc, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x528a, 0xd69a, 0xce59, 0xce59, 0xd69a, 0x5a89, 0xbdd7, 0xce59,
  0xd6ba, 0xe71c, 0xe73c, 0xef5d, 0xe73c, 0xdefb, 0xd69a, 0xce59, 0xbdf7, 0x8d56, 0x54b7, 0x3c77, 0x3c77, 0x6538, 0x85da, 0xffdf,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa534, 0x5aeb, 0x9492, 0xd69a, 0xd69a, 0x94b2, 0x6b2c, 0xdedb, 0xef7d,
  0xf7be, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7be, 0xef7d, 0xe73c, 0xdedb, 0xc638, 0xa597, 0x54b7, 0x3c77, 0x3c97, 0xef7d,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x840f, 0x94b2, 0x5b4e, 0x5269, 0x528a, 0x6b2c, 0xce79, 0xf79e, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdefb, 0xce59, 0x9d77, 0x4497, 0xef5d,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x8410, 0x9cb2, 0xadf8, 0x75db, 0x34b8, 0xb596, 0xce79, 0xe73c, 0xffdf, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xef7d, 0xdedb, 0xd6ba, 0xef7d,
  0xffff, 0xffff, 0xffff, 0xffdf, 0xa514, 0x8410, 0x94b2, 0xce59, 0x95da, 0x54f8, 0x6d17, 0xdedb, 0xef7d, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xef7d, 0xffff, 0xffff, 0xf7be, 0xf79e, 0xffdf,
  0xffff, 0xffff, 0xffdf, 0xa534, 0x8410, 0x94b2, 0xce79, 0xdefb, 0x759a, 0x4497, 0xbe39, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0x632c, 0x632c, 0x630c, 0x9cd2, 0xce79, 0xef5d, 0xcedc, 0x6d59, 0x3c77, 0xdefb, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xb320, 0x0000, 0x0000, 0x3c9b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef7d, 0x632c, 0x632c, 0x632c, 0xce79, 0xef5d, 0xf7be, 0xa63a, 0x5d18, 0x64f7, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xfed2, 0x649b, 0xffff, 0xfed2, 0x380c, 0xb7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef5d, 0x632c, 0x632c, 0x632c, 0xe71c, 0xffdf, 0xf7be, 0x8db9, 0x54f8, 0x8558, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xfff6, 0x6007, 0x96df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef7d, 0xce79, 0xbdf7, 0xce79, 0xef7d, 0xffff, 0xf79e, 0x7d79, 0x54d8, 0x9dd9, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xfed2, 0x39d2, 0xdfff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0xef7d, 0xef5d, 0xef7d, 0xffdf, 0xffff, 0xef7d, 0x7578, 0x44b7, 0xbe5a, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfffb, 0x91c7, 0x96df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x5d38, 0x44b7, 0xbe7a, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xb320, 0x3c9b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x5d18, 0x44b7, 0xbe9b, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xfffb, 0x91c0, 0x3c9b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x5cf8, 0x4497, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xfdac, 0x0000, 0x0000, 0x0000, 0x0000, 0x3c9b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x54f8, 0x44b7, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x54d8, 0x3c97, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x4cd7, 0x3c97, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x4cb7, 0x3c97, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x44b7, 0x3c97, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x4497, 0x4497, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xce79, 0xce79, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'Tune', 32x32px
const uint16_t epd_bitmap_Tune[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffbe, 0xee34, 0xe4ca, 0xdc05, 0xdc05, 0xdc25,
  0xe446, 0xdc05, 0xdc05, 0xe4ca, 0xee34, 0xffbe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf77c, 0xe4ca, 0xdc25, 0xece7, 0xf589, 0xfe0a, 0xfe2a, 0xfe2a,
  0xfe2a, 0xfe2a, 0xfe0a, 0xf589, 0xece7, 0xdc25, 0xe4ca, 0xf77c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe590, 0xdc26, 0xf548, 0xfe0a, 0xfdea, 0xf548, 0xecc7, 0xe486, 0xe486,
  0xe486, 0xe486, 0xecc7, 0xf548, 0xfdea, 0xfe0a, 0xf548, 0xdc26, 0xe590, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdc68, 0xe4a7, 0xfdea, 0xfdc9, 0xecc7, 0xdc05, 0xcc6a, 0xc50f, 0xbd73, 0xbd74,
  0xbd74, 0xbd73, 0xc50f, 0xcc6a, 0xdc05, 0xecc7, 0xfdc9, 0xfdea, 0xe4a7, 0xdc68, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdc68, 0xf508, 0xfdea, 0xf528, 0xdc26, 0xc4ce, 0xbdf7, 0xce59, 0xd6ba, 0xdefb, 0xe71c,
  0xe71c, 0xdefb, 0xd6ba, 0xce59, 0xbdf7, 0xc4ce, 0xdc26, 0xf528, 0xfdea, 0xf508, 0xdc68, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffdf, 0xdc68, 0xf507, 0xfde9, 0xeca7, 0xd447, 0xbdd6, 0xd69a, 0xe71c, 0xe56f, 0xdc88, 0xdc05, 0xdc05,
  0xdc05, 0xdc05, 0xdc88, 0xe56f, 0xe71c, 0xd69a, 0xbdd6, 0xd447, 0xeca7, 0xfde9, 0xf507, 0xdc68, 0xffdf, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xe56f, 0xe486, 0xfdc9, 0xeca7, 0xd447, 0xc638, 0xdefb, 0xe58f, 0xdc25, 0xecc7, 0xf568, 0xfdc9, 0xfdc9,
  0xfdc9, 0xfdc9, 0xf568, 0xecc7, 0xdc25, 0xe58f, 0xdefb, 0xc638, 0xd447, 0xeca7, 0xfdc9, 0xe486, 0xe56f, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xef3b, 0xdc25, 0xfd88, 0xf507, 0xd447, 0xc638, 0xe71c, 0xdc68, 0xe486, 0xfd88, 0xfda8, 0xed07, 0xe486, 0xe466,
  0xe466, 0xe486, 0xed07, 0xfda8, 0xfd88, 0xe486, 0xdc68, 0xe71c, 0xc638, 0xd447, 0xf507, 0xfd88, 0xdc25, 0xef3b, 0xffff, 0xffff,
  0xffff, 0xffdf, 0xdcaa, 0xed07, 0xf568, 0xdc25, 0xc5f7, 0xe71c, 0xdc68, 0xe4a6, 0xfda8, 0xed07, 0xdc25, 0xcc8b, 0xc552, 0xc573,
  0xc573, 0xc552, 0xcc8b, 0xdc25, 0xed07, 0xfda8, 0xe4a6, 0xdc68, 0xe71c, 0xc5f7, 0xdc25, 0xf568, 0xed07, 0xdcaa, 0xffdf, 0xffff,
  0xffff, 0xef5c, 0xdc26, 0xfd88, 0xe4a6, 0xcd0f, 0xdefb, 0xe56f, 0xe486, 0xfd88, 0xe486, 0xd447, 0xbdb5, 0xce79, 0xdedb, 0xe71c,
  0xe71c, 0xdedb, 0xce79, 0xbdd7, 0xd447, 0xe486, 0xfd88, 0xe486, 0xe56f, 0xdefb, 0xcd0f, 0xe486, 0xfd88, 0xdc26, 0xef5c, 0xffff,
  0xffff, 0xe5f2, 0xeca6, 0xf547, 0xdc25, 0xd69a, 0xe73c, 0xdc26, 0xf547, 0xece7, 0xd447, 0xc638, 0xdefb, 0xef7d, 0xce59, 0x8c72,
  0x8c72, 0xce59, 0xef7d, 0xe71c, 0xc638, 0xd447, 0xece7, 0xf547, 0xdc26, 0xe73c, 0xd69a, 0xdc26, 0xf547, 0xeca6, 0xe5f2, 0xffff,
  0xf7be, 0xdca9, 0xece7, 0xece7, 0xd4ab, 0xe71c, 0xdd6f, 0xe4a6, 0xf547, 0xdc26, 0xc618, 0xe73c, 0xffdf, 0xf7be, 0x8451, 0xd69a,
  0xd69a, 0x8451, 0xf7be, 0xffdf, 0xe73c, 0xc5f6, 0xdc26, 0xf547, 0xe4a6, 0xdd6f, 0xe71c, 0xd4ab, 0xece7, 0xece7, 0xdca9, 0xf7be,
  0xef7d, 0xdc25, 0xf527, 0xe486, 0xd571, 0xe73c, 0xdc68, 0xf507, 0xecc6, 0xd4cc, 0xe71c, 0xffdf, 0xffff, 0xef7d, 0x8451, 0xef7d,
  0x94d3, 0x8c71, 0xef7d, 0xffff, 0xffdf, 0xdefb, 0xd4cc, 0xecc6, 0xf507, 0xdc68, 0xe73c, 0xd571, 0xe486, 0xf527, 0xdc25, 0xef7d,
  0xef5d, 0xdc26, 0xf526, 0xe466, 0xd657, 0xe71c, 0xdc26, 0xf526, 0xe466, 0xd5d4, 0xf79e, 0xffff, 0xffff, 0xef5d, 0x8451, 0xdf1c,
  0x9cf3, 0x8c51, 0xef5d, 0xffff, 0xffff, 0xf79e, 0xd5d4, 0xe466, 0xf526, 0xdc26, 0xe71c, 0xd657, 0xe466, 0xf526, 0xdc26, 0xef5d,
  0xef5d, 0xdc26, 0xf526, 0xe466, 0xde98, 0xe73c, 0xdc26, 0xf526, 0xe466, 0xde57, 0xf7be, 0xffff, 0xffff, 0xef5d, 0x8431, 0xd69a,
  0x9cf4, 0x8c51, 0xef5d, 0xffff, 0xffff, 0xf7be, 0xde57, 0xe466, 0xf526, 0xdc26, 0xe73c, 0xde98, 0xe466, 0xf526, 0xdc26, 0xef5d,
  0xef5d, 0xdc26, 0xf506, 0xe446, 0xe698, 0xe73c, 0xdc26, 0xf506, 0xe466, 0xde77, 0xffdf, 0xffff, 0xffff, 0xef5d, 0x8431, 0xc659,
  0xa514, 0x8451, 0xef5d, 0xffff, 0xffff, 0xffdf, 0xde77, 0xe466, 0xf506, 0xdc26, 0xe73c, 0xe698, 0xe466, 0xf506, 0xdc26, 0xef5d,
  0xef5d, 0xdc26, 0xf506, 0xe446, 0xe698, 0xe73c, 0xdc26, 0xf506, 0xe466, 0xde35, 0xffdf, 0xffff, 0xffff, 0xef5d, 0x8431, 0xbdf7,
  0xa535, 0x8431, 0xef5d, 0xffff, 0xffff, 0xffdf, 0xde35, 0xe466, 0xf506, 0xdc26, 0xe73c, 0xe698, 0xe446, 0xf506, 0xdc26, 0xef5d,
  0xef5d, 0xdc26, 0xecc5, 0xe465, 0xddd3, 0xe73c, 0xd489, 0xe465, 0xdc47, 0xe71c, 0xffdf, 0xffff, 0xffff, 0xef5d, 0x8410, 0xad96,
  0xa555, 0x8410, 0xef5d, 0xffff, 0xffff, 0xffdf, 0xe71c, 0xdc47, 0xe465, 0xd489, 0xe73c, 0xddd3, 0xe465, 0xecc5, 0xdc26, 0xef5d,
  0xef5d, 0xdc68, 0xeca5, 0xe485, 0xdceb, 0xe73c, 0xd591, 0xdc46, 0xce59, 0xef7d, 0xffff, 0xffff, 0xffff, 0xad75, 0xbdd7, 0xa555,
  0xa555, 0xbdd7, 0xad75, 0xffff, 0xffff, 0xffff, 0xef7d, 0xce59, 0xdc46, 0xd591, 0xe73c, 0xdceb, 0xe485, 0xeca5, 0xdc68, 0xef5d,
  0xef7d, 0xd4cc, 0xe465, 0xeca5, 0xdc26, 0xe73c, 0xdefb, 0xd679, 0xe73c, 0xffdf, 0xffff, 0xffff, 0xe73c, 0x8c51, 0xe71c, 0xad55,
  0xad55, 0xe71c, 0x8c51, 0xe73c, 0xffff, 0xffff, 0xffdf, 0xe73c, 0xd69a, 0xdefb, 0xe73c, 0xdc26, 0xeca5, 0xe465, 0xd4cc, 0xef7d,
  0xf79e, 0xd592, 0xdc25, 0xeca4, 0xe445, 0xe5d1, 0xf79e, 0xf79e, 0xffdf, 0xffff, 0xffff, 0xffdf, 0x8c51, 0xd6bb, 0xb5b7, 0x94d3,
  0x94d3, 0xb5b7, 0xd6bb, 0x8c51, 0xffdf, 0xffff, 0xffff, 0xffdf, 0xf79e, 0xf79e, 0xe5d2, 0xe445, 0xeca4, 0xdc25, 0xd592, 0xf79e,
  0xf7be, 0xdedb, 0xdc26, 0xe445, 0xdc47, 0xdefb, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xb5b6, 0xad76, 0xce59, 0xa555, 0x73af,
  0x73af, 0xad76, 0xce59, 0xad76, 0xb5b6, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xdefb, 0xdc47, 0xe445, 0xdc26, 0xdedb, 0xf7be,
  0xffff, 0xe73c, 0xd50e, 0xdc46, 0xc638, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x8431, 0xce7a, 0xb5b6, 0x73af, 0xad75,
  0xad75, 0x7bcf, 0xb596, 0xce7a, 0x8430, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0xc638, 0xdc46, 0xd50e, 0xe73c, 0xffff,
  0xffff, 0xf79e, 0xd6ba, 0xce79, 0xe73c, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0x9492, 0xbdd7, 0xb5d7, 0x8431, 0x9492, 0xdedb,
  0xdedb, 0x9492, 0x8c92, 0xb5d7, 0xbdd7, 0x9492, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe73c, 0xce79, 0xd6ba, 0xf79e, 0xffff,
  0xffff, 0xffff, 0xf79e, 0xf79e, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x94d3, 0xc618, 0xad96, 0x8c71, 0x8c72, 0x8c72,
  0x8c72, 0x8c72, 0x8c92, 0xb5b7, 0xc618, 0x94d3, 0xce59, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf79e, 0xf79e, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x7bcf, 0xbdd7, 0xbdd7, 0xbdf7, 0xbe18, 0xbe18, 0xbe18,
  0xbe18, 0xbe18, 0xbdf8, 0xbdf7, 0xbdd7, 0xbdd7, 0x7bcf, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa514, 0xa534, 0xbe18, 0x7bf0, 0x630c, 0x632d, 0x632d, 0x632d,
  0x632d, 0x632d, 0x632d, 0x630c, 0x73cf, 0xbe18, 0xa534, 0xa514, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6bb, 0x7bf0, 0xbe18, 0xa534, 0x6b4d, 0xb5b6, 0xbdf7, 0xbdf7, 0xbdf7,
  0xbdf7, 0xbdf7, 0xbdf7, 0xbdd7, 0x73ae, 0x9cf4, 0xbe18, 0x7bf0, 0xd6bb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x6b4d, 0xad76, 0xc618, 0x6b4d, 0xb596, 0xdefb, 0xef5d, 0xef5d, 0xef5d,
  0xef5d, 0xef5d, 0xef5d, 0xdefb, 0xbdd7, 0x6b4d, 0xc618, 0xad76, 0x6b4d, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x6b4d, 0x7c10, 0x738e, 0x8c51, 0xdefb, 0xffdf, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffdf, 0xe71c, 0x9492, 0x738e, 0x7c10, 0x6b4d, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xce79, 0xbdf7, 0xc618, 0xd6ba, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0xd6ba, 0xc618, 0xbdf7, 0xce79, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'Update', 32x32px
const uint16_t epd_bitmap_Update[] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbe9c, 0x64d8, 0x33f7, 0x1355, 0x1355,
  0x1355, 0x1355, 0x1355, 0x33f7, 0x64d8, 0xbe9c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xae3b, 0x1b96, 0x2bf7, 0x653b, 0x8e1e, 0xaebf, 0xaebf,
  0xaebf, 0xaebf, 0xaebf, 0x8e1e, 0x653b, 0x2bf7, 0x1b96, 0xae3b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x2bd6, 0x3438, 0x85dd, 0x965f, 0x653c, 0x449b, 0x2c1a, 0x2c1a,
  0x2c1a, 0x2c1a, 0x2c1a, 0x449b, 0x653c, 0x965f, 0x85dd, 0x3438, 0x2bd6, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe75e, 0x1375, 0x651b, 0x963f, 0x54fc, 0x4459, 0x9d76, 0xcdf4, 0xee73, 0xee73,
  0xee73, 0xee73, 0xee73, 0xcdf4, 0x9d76, 0x4459, 0x54fc, 0x963f, 0x651b, 0x1375, 0xdf5e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xcefd, 0x1b96, 0x85dd, 0x759d, 0x4c99, 0xa5b6, 0xee94, 0xee94, 0xeed5, 0xef15, 0xf736,
  0xf736, 0xf736, 0xef15, 0xeed5, 0xee94, 0xee94, 0xa5b6, 0x4c99, 0x7dbe, 0x85dd, 0x1b96, 0xdf5e, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xdf3d, 0x1375, 0x85dd, 0x6d7d, 0x6cf8, 0xe695, 0xf6f5, 0xf756, 0xf757, 0xf756, 0xf756, 0xf777,
  0x840d, 0xf777, 0xf756, 0xf756, 0xf757, 0xf736, 0xf6f5, 0xe695, 0x6cf8, 0x6d7d, 0x85dd, 0x1375, 0xef9e, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffdf, 0x2bd6, 0x5cfb, 0x6d7d, 0x7d38, 0xf6f6, 0xf737, 0xff97, 0x8c2e, 0xf777, 0xf757, 0xf757, 0xf777,
  0x842e, 0xf777, 0xf757, 0xf757, 0xf757, 0x83ed, 0xf777, 0xf736, 0xf6f6, 0x7d38, 0x759d, 0x5cfb, 0x2bd6, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xa61b, 0x3418, 0x85de, 0x5cda, 0xff37, 0xf757, 0xff98, 0x8c70, 0x9490, 0xffb8, 0xf777, 0xf757, 0xf777,
  0x840e, 0xf777, 0xf757, 0xf757, 0xf757, 0xf777, 0xf757, 0xf757, 0xf757, 0xff37, 0x5cda, 0x85de, 0x3418, 0xa61a, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7be, 0x1b96, 0x6d5c, 0x54dc, 0xded8, 0xff77, 0xf777, 0xff98, 0x8c70, 0x4a8b, 0x9490, 0xffb8, 0xf778, 0xf777,
  0xf778, 0xf777, 0xf757, 0xf757, 0xf757, 0xf757, 0xf757, 0xf777, 0xf777, 0xff77, 0xded8, 0x54dc, 0x6d5c, 0x1b96, 0xf7be, 0xffff,
  0xffff, 0xffff, 0xb65b, 0x2bd7, 0x7dbe, 0x8599, 0xff98, 0xff98, 0x840e, 0xff98, 0xffd9, 0x8c70, 0x4a6a, 0x8c70, 0xffd9, 0xf798,
  0xf778, 0xf758, 0xf758, 0xf758, 0xf758, 0xf758, 0xf758, 0xf778, 0x840e, 0xff98, 0xff98, 0x8599, 0x7dbe, 0x2bd7, 0xb65b, 0xffff,
  0xffff, 0xffdf, 0x5cb8, 0x54da, 0x5cfc, 0xc6ba, 0xff98, 0xf778, 0xf778, 0xf778, 0xff98, 0xffd9, 0x8c4f, 0x4229, 0x8c4f, 0xffd9,
  0xff98, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xff98, 0xc6ba, 0x5cfc, 0x54da, 0x5cb8, 0xffdf,
  0xffff, 0xf79e, 0x2bd6, 0x6d5c, 0x449b, 0xffda, 0xff78, 0xf778, 0xf778, 0xf778, 0xf778, 0xff99, 0xffd9, 0x8c2f, 0x39e9, 0x8c2f,
  0xfffa, 0xff99, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xf778, 0xff78, 0xffda, 0x449b, 0x6d5c, 0x2bd6, 0xf79e,
  0xffff, 0xef7d, 0x1376, 0x7dbd, 0x3c7a, 0xfff9, 0xf798, 0xf799, 0xf799, 0xf799, 0xf778, 0xf799, 0xffb9, 0xfffa, 0x842f, 0x39c8,
  0x840e, 0xfffa, 0xff99, 0xf778, 0xf778, 0xf778, 0xf778, 0xf799, 0xf799, 0xf799, 0xf798, 0xfff9, 0x3c7a, 0x7dbd, 0x1376, 0xef7d,
  0xffff, 0xef5d, 0x1376, 0x7d9d, 0x3c7a, 0xfffa, 0xff99, 0xffb9, 0xffb9, 0xffb9, 0xf799, 0xf799, 0xf799, 0xffb9, 0xfffa, 0x8c2f,
  0x31a7, 0x7bce, 0xffd9, 0xf799, 0xf799, 0xf799, 0xf799, 0xffb9, 0xffb9, 0xffb9, 0xff99, 0xfffa, 0x3c7a, 0x7d9d, 0x1376, 0xef5d,
  0xffff, 0xef5d, 0x1376, 0x759d, 0x3c9b, 0xffd9, 0xffb9, 0x9490, 0x9490, 0x9490, 0xffb9, 0xf799, 0xf799, 0xffba, 0xfffb, 0x8c50,
  0x3186, 0x7bcd, 0xffda, 0xf799, 0xf799, 0xf799, 0xffb9, 0x9490, 0x9490, 0x9490, 0xffb9, 0xffd9, 0x3c9b, 0x759d, 0x1376, 0xef5d,
  0xffff, 0xef5d, 0x1376, 0x757d, 0x3c9b, 0xffd9, 0xffb9, 0xffba, 0xffda, 0xffba, 0xffba, 0xff99, 0xffba, 0xfffa, 0x8c70, 0x39e8,
  0x840e, 0xfffb, 0xffba, 0xf799, 0xf799, 0xf799, 0xffba, 0xffba, 0xffda, 0xffba, 0xffb9, 0xffd9, 0x3c9b, 0x757d, 0x1376, 0xef5d,
  0xffff, 0xef5d, 0x1376, 0x6d7c, 0x44bb, 0xfffa, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffda, 0x9491, 0x4229, 0x8c4f,
  0xfffb, 0xffda, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xfffa, 0x449b, 0x6d7c, 0x1376, 0xef5d,
  0xffff, 0xef5d, 0x2bd6, 0x5cfb, 0x4cdb, 0xdf3a, 0xffda, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xfffb, 0x8c70, 0x8c50, 0xfffb,
  0xffda, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffda, 0xdf3a, 0x4cdb, 0x5cfb, 0x2bd6, 0xef5d,
  0xffff, 0xef7d, 0x5476, 0x4479, 0x54fb, 0x9e3b, 0xfffa, 0xffda, 0xffdb, 0xffda, 0xffba, 0xffba, 0xffdb, 0xfffb, 0xfffb, 0xffdb,
  0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffba, 0xffda, 0xffdb, 0xffda, 0xfffa, 0x9e3b, 0x54fb, 0x4479, 0x5476, 0xef7d,
  0xffff, 0xf79e, 0x9d98, 0x23d7, 0x5d1c, 0x54fb, 0xffdb, 0xfffb, 0x9cb1, 0xffdb, 0xffbb, 0xffbb, 0xffbb, 0xffdb, 0xffdb, 0xffdb,
  0xffdb, 0xffbb, 0xffbb, 0xffbb, 0xffbb, 0xffbb, 0xffbb, 0xffdb, 0x9cb1, 0xfffb, 0xffdb, 0x54fb, 0x5d1c, 0x23d7, 0x9d98, 0xf79e,
  0xffff, 0xffdf, 0xdedb, 0x1b96, 0x4c9a, 0x54fb, 0xae7b, 0xfffb, 0xfffb, 0xffdb, 0xffdb, 0xffdb, 0xffdb, 0xffdb, 0xffdb, 0xffdb,
  0xffdb, 0xffdb, 0xffdb, 0xffdb, 0xffdb, 0xffdb, 0xffdb, 0xffdb, 0xfffb, 0xfffb, 0xae7b, 0x54fb, 0x4c9a, 0x1b96, 0xdedb, 0xffdf,
  0xffff, 0xffff, 0xef5d, 0x8d37, 0x2bd7, 0x5cfb, 0x4cdb, 0xef9b, 0xfffb, 0xfffb, 0xfffb, 0xfffb, 0xfffb, 0xffdb, 0xffdb, 0xfffc,
  0x9cf2, 0xfffc, 0xffdb, 0xffdb, 0xfffb, 0xfffb, 0xfffb, 0xfffb, 0xfffb, 0xef9b, 0x4cdb, 0x5cfb, 0x2bd7, 0x8d37, 0xef5d, 0xffff,
  0xffff, 0xffff, 0xf7be, 0xd6ba, 0x2bb6, 0x3c59, 0x54db, 0x551b, 0xfffc, 0xfffc, 0xfffc, 0x9cf2, 0xfffc, 0xffdb, 0xfffc, 0xfffc,
  0xa513, 0xfffc, 0xfffc, 0xffdb, 0xfffc, 0x9cf2, 0xfffc, 0xfffc, 0xfffc, 0x551b, 0x54db, 0x3c59, 0x2bb6, 0xd6ba, 0xf7be, 0xffff,
  0xffff, 0xffff, 0xffff, 0xef5d, 0xbe18, 0x1b76, 0x4c9a, 0x54db, 0x551b, 0xef9c, 0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xfffc,
  0xa513, 0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xef9c, 0x551b, 0x54db, 0x4c9a, 0x1b76, 0xbe18, 0xef5d, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffdf, 0xe71c, 0xadd8, 0x1b96, 0x447a, 0x4cbb, 0x4cfc, 0xb69c, 0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xfffc,
  0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xfffc, 0xb69c, 0x4cfc, 0x4cbb, 0x447a, 0x1b96, 0xadd8, 0xe71c, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe71c, 0xadb7, 0x1b76, 0x3438, 0x4c9a, 0x4cdb, 0x5d3c, 0xa67c, 0xe77c, 0xfffd, 0xfffd,
  0xfffd, 0xfffd, 0xfffd, 0xe77c, 0xa67c, 0x5d3c, 0x4cdb, 0x4c9a, 0x3438, 0x1b76, 0xadb7, 0xe71c, 0xffdf, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xe71c, 0xbdf8, 0x2bb6, 0x23b7, 0x3c59, 0x4c9a, 0x4cdb, 0x4cfb, 0x551c, 0x551c,
  0x551c, 0x551c, 0x551c, 0x4cfb, 0x4cdb, 0x4c9a, 0x3c59, 0x23b7, 0x2bb6, 0xbdf8, 0xe71c, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe71c, 0xce59, 0x7cf6, 0x1b96, 0x23b6, 0x3418, 0x3c59, 0x447a, 0x447a,
  0x447a, 0x447a, 0x447a, 0x3c59, 0x3418, 0x23b6, 0x1b96, 0x7cf6, 0xce59, 0xe71c, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xef5d, 0xd6ba, 0xc618, 0x8d16, 0x4c36, 0x2bb6, 0x1b96, 0x1b96,
  0x1b96, 0x1b96, 0x1b96, 0x2bb6, 0x4c36, 0x8d16, 0xc618, 0xd6ba, 0xef5d, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xef5d, 0xdedb, 0xce79, 0xc618, 0xbdf7, 0xbdf7,
  0xbdf7, 0xbdf7, 0xbdf7, 0xc618, 0xce79, 0xdedb, 0xef5d, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf79e, 0xef7d, 0xef5d, 0xef5d,
  0xef5d, 0xef5d, 0xef5d, 0xef7d, 0xf79e, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};


// 'b_alarm', 32x32px
const unsigned char epd_bitmap_b_alarm[] PROGMEM = {
  0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0xf0, 0x00,
  0x00, 0x0e, 0x70, 0x00, 0x00, 0x1c, 0x38, 0x00, 0x00, 0x1c, 0x38, 0x00, 0x00, 0x38, 0x1c, 0x00,
  0x00, 0x31, 0x8c, 0x00, 0x00, 0x73, 0xce, 0x00, 0x00, 0xe3, 0xc7, 0x00, 0x00, 0xe3, 0xc7, 0x00,
  0x01, 0xc3, 0xc3, 0x80, 0x01, 0x83, 0xc1, 0x80, 0x03, 0x83, 0xc1, 0xc0, 0x07, 0x03, 0xc0, 0xe0,
  0x07, 0x03, 0xc0, 0xe0, 0x0e, 0x01, 0x80, 0x70, 0x0e, 0x00, 0x00, 0x70, 0x1c, 0x00, 0x00, 0x38,
  0x18, 0x01, 0x80, 0x18, 0x38, 0x03, 0xc0, 0x1c, 0x70, 0x03, 0xc0, 0x0e, 0x70, 0x00, 0x00, 0x0e,
  0xf0, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xfe,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'b_motion', 64x64px
const unsigned char epd_bitmap_b_motion[] PROGMEM = {
  0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x08, 0x07, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x83, 0x87, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xff, 0xc1, 0xc3, 0x80, 0x00, 0x00, 0x00, 0x01, 0xe3, 0xe1, 0xc3, 0x80, 0x00, 0x00, 0x00,
  0x03, 0x80, 0xf0, 0xc3, 0x80, 0x00, 0x00, 0x00, 0x03, 0x80, 0x70, 0xe3, 0x80, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x30, 0xe1, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x30, 0xe1, 0x80, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x70, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x03, 0x80, 0x70, 0xe1, 0xe0, 0x00, 0x00, 0x00,
  0x03, 0xc1, 0xe1, 0xe0, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc1, 0xf0, 0x70, 0x00, 0x00, 0x00,
  0x00, 0xff, 0x80, 0xf8, 0x78, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x3c, 0x38, 0x00, 0x00, 0x00,
  0x03, 0xff, 0xe0, 0x1c, 0x18, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x0e, 0x1c, 0x00, 0x00, 0x00,
  0x3f, 0xff, 0xff, 0x0e, 0x1c, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x0f, 0x87, 0x0c, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x03, 0x87, 0x0c, 0x00, 0x1f, 0xfe, 0xe0, 0x00, 0x01, 0xc7, 0x0c, 0x00, 0x3f, 0xff,
  0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07, 0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07,
  0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07, 0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07,
  0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07, 0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07,
  0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07, 0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07,
  0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07, 0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07,
  0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0x07, 0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x39, 0xe7,
  0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x39, 0xe7, 0xe0, 0x00, 0x01, 0xc7, 0x0e, 0x00, 0x38, 0xc7,
  0xe0, 0x00, 0x01, 0xc7, 0x0c, 0x00, 0x38, 0x07, 0xe0, 0x00, 0x03, 0xc7, 0x0c, 0x00, 0x38, 0x07,
  0x7f, 0x00, 0x3f, 0x87, 0x0c, 0x00, 0x3f, 0xff, 0x7f, 0x00, 0x3f, 0x07, 0x1c, 0x00, 0x1f, 0xfe,
  0x07, 0x00, 0x38, 0x0e, 0x1c, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0x1e, 0x1c, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x38, 0x3c, 0x38, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0x78, 0x38, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x38, 0xf0, 0x70, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0xe0, 0xf0, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x38, 0xe1, 0xe0, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0xe1, 0xc0, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0xe1, 0x80, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x70, 0xe1, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 0xe1, 0x80, 0x00, 0x00, 0x00,
  0x03, 0xff, 0xe0, 0xe3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x81, 0xc3, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xc3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0x00, 0x00, 0x00, 0x00
};

// 'b_precision', 32x32px
const unsigned char epd_bitmap_b_precision[] PROGMEM = {
  0x00, 0xff, 0xf0, 0x00, 0x07, 0xe0, 0x7e, 0x00, 0x1c, 0x00, 0x03, 0x80, 0x30, 0x07, 0xc0, 0xc0,
  0x60, 0x7f, 0xc0, 0x20, 0xc0, 0xc0, 0x40, 0x20, 0x81, 0x80, 0x40, 0x30, 0x81, 0x80, 0x40, 0x70,
  0xc1, 0xf0, 0x43, 0xf0, 0xc1, 0x1f, 0xff, 0x30, 0xe1, 0x00, 0x00, 0x33, 0xb9, 0x00, 0x00, 0x3f,
  0x8f, 0x80, 0x03, 0xf1, 0x81, 0xff, 0xff, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01,
  0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0xa0, 0x00, 0x00, 0x01,
  0xa0, 0x00, 0x00, 0x01, 0xa0, 0x00, 0x00, 0x01, 0xe4, 0x00, 0x00, 0x01, 0x64, 0x00, 0x00, 0x01,
  0x64, 0x30, 0x00, 0xc1, 0x24, 0x30, 0x60, 0xc1, 0x34, 0x30, 0x60, 0xc1, 0x1c, 0x30, 0x60, 0xc1,
  0x06, 0x30, 0x60, 0xc1, 0x03, 0xb0, 0x60, 0xcf, 0x00, 0xf8, 0x67, 0xfc, 0x00, 0x1f, 0xff, 0x80
};
// 'b_reading', 32x32px
const unsigned char epd_bitmap_b_reading[] PROGMEM = {
  0x7f, 0xff, 0xff, 0xf0, 0xc0, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x10,
  0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x10,
  0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x10, 0x8e, 0x7f, 0xff, 0x10, 0x80, 0x00, 0x00, 0x10,
  0x80, 0x00, 0x00, 0x10, 0x8e, 0x7f, 0xff, 0x10, 0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x10,
  0x8e, 0x7f, 0xff, 0x10, 0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x10, 0x86, 0x7f, 0xc0, 0x10,
  0x86, 0x7f, 0xc3, 0x00, 0x80, 0x00, 0x1f, 0xe0, 0x80, 0x00, 0x33, 0x38, 0x80, 0x00, 0xcf, 0xcc,
  0x80, 0x01, 0x88, 0x46, 0xff, 0xfb, 0x1b, 0x63, 0x00, 0x03, 0x1b, 0x23, 0x00, 0x01, 0x98, 0x66,
  0x00, 0x00, 0xcc, 0xcc, 0x00, 0x00, 0x67, 0x98, 0x00, 0x00, 0x3c, 0xf0, 0x00, 0x00, 0x0f, 0xc0
};
// 'b_refresh', 32x32px
const unsigned char epd_bitmap_b_refresh[] PROGMEM = {
  0x00, 0x0f, 0xf0, 0x00, 0x00, 0x7c, 0x3e, 0x00, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x00, 0x00, 0xc0,
  0x06, 0x00, 0x00, 0x60, 0x0c, 0x00, 0x00, 0x30, 0x18, 0x07, 0xe0, 0x18, 0x30, 0x1c, 0x38, 0x0c,
  0x20, 0x70, 0x0e, 0x04, 0x60, 0xc0, 0x03, 0x06, 0x40, 0x80, 0x00, 0x02, 0x41, 0x80, 0x00, 0x02,
  0xc1, 0x00, 0x00, 0x03, 0xc3, 0x00, 0x00, 0x03, 0x9a, 0x40, 0x00, 0x41, 0x8f, 0xc0, 0x01, 0xe1,
  0x87, 0x80, 0x03, 0xf1, 0x82, 0x00, 0x02, 0x51, 0xc0, 0x00, 0x00, 0xc3, 0xc0, 0x00, 0x00, 0x83,
  0x40, 0x00, 0x01, 0x82, 0x40, 0x80, 0x01, 0x02, 0x60, 0xc0, 0x03, 0x06, 0x20, 0x70, 0x0e, 0x04,
  0x30, 0x1c, 0x38, 0x0c, 0x18, 0x07, 0xe0, 0x18, 0x0c, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x60,
  0x03, 0x00, 0x00, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x00, 0x7c, 0x3e, 0x00, 0x00, 0x0f, 0xf0, 0x00
};
// 'b_sensor', 64x64px
const unsigned char epd_bitmap_b_sensor[] PROGMEM = {
  0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x01, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7,
  0x03, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x07, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7,
  0x0f, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x1e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7,
  0x3c, 0x78, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xe7, 0x78, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xe7,
  0xf1, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xe7, 0xe3, 0xc7, 0x80, 0x00, 0x00, 0x00, 0x1c, 0xe7,
  0xe7, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7, 0xe7, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7,
  0xe7, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7, 0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7,
  0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7, 0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7,
  0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7, 0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7,
  0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe7, 0xe7, 0x38, 0x00, 0xff, 0xff, 0x00, 0x1c, 0xe7,
  0xe7, 0x38, 0x01, 0xff, 0xff, 0x80, 0x1c, 0xe7, 0xe7, 0x38, 0x01, 0xff, 0xff, 0x80, 0x1c, 0xe7,
  0xe7, 0x38, 0x01, 0xc0, 0x03, 0x80, 0x1c, 0xe7, 0xe7, 0x38, 0x01, 0xd8, 0x1b, 0x80, 0x1c, 0xe7,
  0xe7, 0x38, 0x01, 0xd8, 0x1b, 0x80, 0x1c, 0xe7, 0xe7, 0x38, 0x01, 0xc0, 0x03, 0x80, 0x1c, 0xe7,
  0xe7, 0x38, 0x01, 0xc0, 0x03, 0x80, 0x1c, 0xe7, 0xe7, 0x38, 0x01, 0xc1, 0x83, 0xff, 0xfc, 0xe7,
  0xe7, 0x38, 0x01, 0xc1, 0x83, 0xff, 0xfc, 0xe7, 0xe7, 0x38, 0x01, 0xc0, 0x03, 0x80, 0x00, 0xe7,
  0xe7, 0x38, 0x01, 0xc0, 0x03, 0x80, 0x00, 0xe7, 0xe7, 0x38, 0x01, 0xd8, 0x1b, 0x80, 0x00, 0xe7,
  0xe7, 0x38, 0x01, 0xd8, 0x1b, 0x80, 0x00, 0xe7, 0xe7, 0x38, 0x01, 0xc0, 0x03, 0x80, 0x00, 0xe7,
  0xe7, 0x38, 0x01, 0xff, 0xff, 0x80, 0x00, 0xe7, 0xe7, 0x38, 0x01, 0xff, 0xff, 0x80, 0x00, 0xe7,
  0xe7, 0x38, 0x00, 0xff, 0xff, 0x00, 0x00, 0xe7, 0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7,
  0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7,
  0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7,
  0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7,
  0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7,
  0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xe7, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7,
  0xe7, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xe7, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7,
  0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc
};
// 'b_temp1', 32x32px
const unsigned char epd_bitmap_b_temp1[] PROGMEM = {
  0x00, 0x03, 0xc0, 0x00, 0x00, 0x0e, 0x70, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x18, 0x18, 0x00,
  0x00, 0x10, 0x08, 0xff, 0x00, 0x10, 0x0b, 0x80, 0x00, 0x10, 0x0e, 0x00, 0x00, 0x10, 0x18, 0x00,
  0x00, 0x10, 0x70, 0x00, 0x00, 0x11, 0xc8, 0x00, 0x00, 0x13, 0x18, 0x00, 0x00, 0x1e, 0x18, 0x00,
  0x00, 0x38, 0x48, 0x00, 0x00, 0x60, 0x08, 0x00, 0x01, 0xd1, 0x18, 0x00, 0xff, 0x10, 0x08, 0x00,
  0x00, 0x10, 0x08, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x71, 0x86, 0x00, 0x00, 0x42, 0x82, 0x00,
  0x00, 0xc0, 0x87, 0x00, 0x00, 0x80, 0x81, 0x00, 0x00, 0x90, 0x83, 0x00, 0x00, 0x80, 0x81, 0x00,
  0x00, 0xc0, 0x85, 0x00, 0x00, 0x83, 0xc1, 0x00, 0x00, 0xd0, 0x03, 0x00, 0x00, 0x40, 0x02, 0x00,
  0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x1c, 0x00, 0x00, 0x1f, 0x38, 0x00, 0x00, 0x07, 0xe0, 0x00
};
// 'b_temp2', 32x32px
const unsigned char epd_bitmap_b_temp2[] PROGMEM = {
  0x00, 0x03, 0xc0, 0x00, 0x00, 0x0e, 0x70, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x18, 0x18, 0x00,
  0x00, 0x10, 0x08, 0xff, 0x00, 0x10, 0x0b, 0x80, 0x00, 0x10, 0x0e, 0x00, 0x00, 0x10, 0x18, 0x00,
  0x00, 0x10, 0x70, 0x00, 0x00, 0x11, 0xc8, 0x00, 0x00, 0x13, 0x18, 0x00, 0x00, 0x1e, 0x18, 0x00,
  0x00, 0x38, 0x48, 0x00, 0x00, 0x60, 0x08, 0x00, 0x01, 0xd1, 0x18, 0x00, 0xff, 0x10, 0x08, 0x00,
  0x00, 0x10, 0x08, 0x00, 0x00, 0x33, 0x8c, 0x00, 0x00, 0x70, 0x46, 0x00, 0x00, 0x40, 0x42, 0x00,
  0x00, 0xc0, 0x47, 0x00, 0x00, 0x80, 0x81, 0x00, 0x00, 0x91, 0x03, 0x00, 0x00, 0x82, 0x01, 0x00,
  0x00, 0xc3, 0xc5, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xd0, 0x03, 0x00, 0x00, 0x40, 0x02, 0x00,
  0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x1f, 0x38, 0x00, 0x00, 0x07, 0xe0, 0x00
};
// 'b_tune', 32x32px
const unsigned char epd_bitmap_b_tune[] PROGMEM = {
  0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0x00, 0x18, 0x60, 0x00, 0x00, 0x20, 0xc0,
  0x00, 0x00, 0x21, 0x80, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x62, 0x0f, 0x00, 0x00, 0x62, 0x1b,
  0x00, 0x00, 0x61, 0x31, 0x00, 0x00, 0x20, 0xe3, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x40, 0x02,
  0x00, 0x00, 0x80, 0x04, 0x00, 0x01, 0x03, 0xb8, 0x00, 0x02, 0x0f, 0xe0, 0x00, 0x04, 0x18, 0x00,
  0x00, 0x08, 0x30, 0x00, 0x07, 0x90, 0x60, 0x00, 0x1f, 0xe0, 0xc0, 0x00, 0x20, 0x01, 0x80, 0x00,
  0x40, 0x03, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xc3, 0x86, 0x00, 0x00, 0x8c, 0xc6, 0x00, 0x00,
  0xd8, 0x46, 0x00, 0x00, 0x70, 0x42, 0x00, 0x00, 0x60, 0xc6, 0x00, 0x00, 0x01, 0x84, 0x00, 0x00,
  0x03, 0x04, 0x00, 0x00, 0x06, 0x08, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00
};
// 'b_wireless', 64x64px
const unsigned char epd_bitmap_b_wireless[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00,
  0x00, 0x01, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0xe0, 0x00,
  0x00, 0x1f, 0x80, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00,
  0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x03, 0xc0, 0x00, 0xff, 0xff, 0x00, 0x07, 0x80,
  0x07, 0x80, 0x0f, 0xff, 0xff, 0xe0, 0x01, 0xe0, 0x1e, 0x00, 0x7f, 0xc0, 0x07, 0xfc, 0x00, 0xf0,
  0x3c, 0x01, 0xfc, 0x00, 0x00, 0x7f, 0x00, 0x78, 0x78, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0xc0, 0x1c,
  0xf0, 0x0f, 0x80, 0x00, 0x00, 0x01, 0xf0, 0x0e, 0xe0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0e,
  0x70, 0x78, 0x00, 0x3f, 0xf8, 0x00, 0x3c, 0x1c, 0x38, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x0f, 0x38,
  0x1f, 0xc0, 0x0f, 0xfe, 0x7f, 0xf0, 0x07, 0xf0, 0x0f, 0x80, 0x3f, 0x00, 0x01, 0xfc, 0x03, 0xe0,
  0x07, 0x00, 0xf8, 0x00, 0x00, 0x3e, 0x01, 0xc0, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x0f, 0x80, 0x00,
  0x00, 0x07, 0x80, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x0f, 0x00, 0x07, 0xc0, 0x01, 0xe0, 0x00,
  0x00, 0x1e, 0x00, 0x7f, 0xfe, 0x00, 0x70, 0x00, 0x00, 0x3c, 0x03, 0xff, 0xff, 0x80, 0x38, 0x00,
  0x00, 0x1c, 0x0f, 0xe0, 0x07, 0xe0, 0x70, 0x00, 0x00, 0x0e, 0x1f, 0x00, 0x00, 0xf8, 0xe0, 0x00,
  0x00, 0x07, 0x3c, 0x00, 0x00, 0x3d, 0xc0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x1f, 0x80, 0x00,
  0x00, 0x01, 0xe0, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x1f, 0xf0, 0x06, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x3f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xc0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x01, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x70, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// you know the drill
ILI9341_t3 Display(CS_PIN, DC_PIN, 8);  //Display object

// required, you must create either an Item menu (no inline editing) or an EditMenu (allows inline editing)
//ClassName YourMenuName(&DisplayObject, True=Touch input, False(Default)=mechanical input);
ItemMenu MainMenu(&Display);

// since we're showing both menu types, create an object for each where the item menu is the main and calls edit menus
// you can have an item menu call other item menus an edit menu can call an edit menu but in a round about way--not recommended
//ClassName YourMenuName(&DisplayObject, True=Touch input, False(Default)=mechanical input);
EditMenu OptionMenu(&Display);
EditMenu ColorMenu(&Display);
EditMenu WirelessMenu(&Display);

XPT2046_Touchscreen Touch(T_CS, T_IRQ);

TS_Point TouchPoint;

// create encoder object
Encoder myEnc(EN1_PIN, EN2_PIN);

elapsedMillis Update;

void setup() {

  Serial.begin(9600);

  // while ((millis() > 5000) || (!Serial)) {}
  // I use a digital pin to control LED brightness
  pinMode(LED_PIN, OUTPUT);
  // button in the encoder
  pinMode(SE_PIN, INPUT_PULLUP);

  delay(300);
  digitalWrite(LED_PIN, HIGH);

  // fire up the display
  Display.begin();
  Display.setRotation(1);

  Touch.begin();

  Touch.setRotation(3);

  Display.fillScreen(0);

  // initialize the MainMenu object
  // note ROW_HEIGHT is row height and needs to be larger that font height
  // the ROWS is max rows to be displayed (remember, library handles wraparound
  /*
    init(TextColor, BackgroundColor, HighlightTextColor, HighlightColor,
    ItemRowHeight, MaxRowsPerScreen, TitleText, ItemFont, TitleFont);
  */

  MainMenu.init(MENU_TEXT, MENU_BACKGROUND, MENU_HIGHLIGHTTEXT, MENU_HIGHLIGHT, 64, 3, "Main Menu", FONT_TITLE, FONT_TITLE);

  // now add each item, text is what's displayed for each menu item, there are no other arguements
  // there are 3 add types
  // 1. addNI for no icon
  // 2. addMono for simple 1 color  icon each item
  // 3. add565 for displaying a color icon for each item

  // note the return value for each item will be it's returned itemid an dwill be > 0
  // a return of 0 is reserved for the exit item
  // the exit item is actually the title bar--if user moves selector to the title bar
  // it's temporarily renamed to "Exit"

  /*
    addNI(ItemLabel);
    addMono(ItemLabel, MonoBitmap, BitmapWidth, BitmapHeight );
    add565(ItemLabel, ColorBitmap, uint8_t BitmapWidth, uint8_t BitmapHeight);
  */
  MenuOption1 = MainMenu.add565("Options", epd_bitmap_sensor, 64, 64);
  MenuOption2 = MainMenu.add565("Colors", epd_bitmap_drivers, 64, 64);
  MenuOption3 = MainMenu.add565("Wireless", epd_bitmap_64_wireless, 64, 64);
  MenuOption4 = MainMenu.add565("Motors", epd_bitmap_sensor, 64, 64);
  MenuOption5 = MainMenu.add565("Sensors", epd_bitmap_64_wireless, 64, 64);


  // the remaing method calls for this menu are optional and shown as an example on what some of the things you can do
  // however, you will most likely need to set xxxMarginxxx stuff as the library does not attempt to get text bounds
  // and center, you will have to put pixel values in to control where text is display in menu items, title bars, etc.

  // just and example how you can disable a menu item
  if (AllowColorMenu == 0) {
    MainMenu.disable(MenuOption2);
  } else {
    MainMenu.enable(MenuOption2);
  }

  // getEnableState(MenuItemID);
  // wanna know what the stat is?
  Serial.print("Enable State for MainMenu, MenuOption3: ");
  Serial.println(MainMenu.getEnableState(MenuOption3));

  // optional, but you can change title bar colors
  // setTitleColors(TitleTextColor, TitleFillColor);
  MainMenu.setTitleColors(TITLE_TEXT, TITLE_BACK);

  // these are all optional, but you can change title bar colors, size, and margins.
  // setTitleBarSize(TitleTop, TitleLeft, TitleWith, TitleHeight);
  MainMenu.setTitleBarSize(0, 0, 320, 40);

  // optional but lets center the title text about the height but scoot it in a bit from the left
  // setTitleTextMargins(LeftMargin, TopMargin);
  MainMenu.setTitleTextMargins(60, 7);

  // optional but you can set the left margin and top to scoot the icon over and down
  // only needed if you are using icons in your menu items
  // setIconMargins(LeftMargin, TopMargin);
  MainMenu.setIconMargins(0, 0);

  // optional but you can set the left margin and top to scoot the menu highlight over and down
  // not needed but recommended so you can better control where the text is placed
  // the library will not determine font height and such and adjust--that will be on you
  // setMenuBarMargins(LeftMargin, Width, BorderRadius, BorderThickness);
  MainMenu.setMenuBarMargins(0, 310, 10, 4);

  // optional but you can set the menu highlight special colors (disable text color and border color)
  // not needed if you dont plan on disabling menu items
  // the library will not determine font height and such and adjust--that will be on you
  // setItemColors(DisableTextColor, BorderColor);
  MainMenu.setItemColors(MENU_DISABLE, MENU_SELECTBORDER);

  // setItemTextMargins(LeftMargin, TopMargin, MarginBetweenTitleBarAndMenu);
  MainMenu.setItemTextMargins(10, 15, 5);

  // this example includes both menu types, the first (above was a menu where items have not editing)
  // this menu type EditMenu allows changes for each items value--basically in-line editing
  // more capability? more arguements...

  /*
     init(TextColor, BackgroundColor, HighlightTextColor, HighlightColor, SelectedTextColor, SelectedColor,
      MenuColumn, ItemRowHeight,MaxRowsPerScreen, TitleText, ItemFont, TitleFont);
  */
  OptionMenu.init(MENU_TEXT, MENU_BACKGROUND, MENU_HIGHLIGHTTEXT, MENU_HIGHLIGHT, MENU_SELECTTEXT, MENU_SELECT,
                  DATA_COLUMN, ROW_HEIGHT, ROWS, "Sensor Menu", FONT_ITEM, FONT_TITLE);

  // now add each item, text is what's displayed for each menu item, there are no other arguements
  // there are 3 add types
  // 1. addNI for no icon
  // 2. addMono for simple 1 color  icon each item
  // 3. add565 for displaying a color icon for each item

  // note the return value for each item will be it's returned itemid an dwill be > 0
  // a return of 0 is reserved for the exit item
  // the exit item is actually the title bar--if user moves selector to the title bar
  // it's temporarily renamed to "Exit"

  // the edit can be either by cycling through a range of values (low to high by some increment value
  // example, set a voltage divider calibration value 4000 to 10000 in increments of 100
  // or cycle through an array list
  // example, choose your favorite pet from a list ("cat", "dog", "bird", "fish")
  // you still enter a lower and high limit and are the array bounds (0 to 3 in the above example)
  // your Data is the initial array value so you can still have say "bird" be the initial value)
  // in either case you can have icons none, mono or color

  /*
    addNI(ItemText, InitalDisplayData, LowLimit, HighLimit, IncrementValue, DisplayDecimalPlaces, ItemMenuText);

    addMono(ItemText, Data, LowLimit, HighLimit, Increment, DecimalPlaces, ItemMenuText,
    Bitmap, BitmapWidth, BitmapHeight);

    add565(ItemText, Data, LowLimit, HighLimit, Increment, DecimalPlaces, ItemMenuText,
    Bitmap, BitmapWidth, BitmapHeight);
  */
  OptionOption1 = OptionMenu.add565("Allow Colors", AllowColorMenu, 0, sizeof(OffOnItems) / sizeof(OffOnItems[0]), 1, 0, OffOnItems, epd_bitmap_Temp1, 32, 32);
  OptionOption2 = OptionMenu.add565("Show Units", ShowUOM, 0, sizeof(OffOnItems) / sizeof(OffOnItems[0]), 1, 0, OffOnItems, epd_bitmap_Alarm, 32, 32);
  OptionOption3 = OptionMenu.add565("Precision", Decimals, 0, sizeof(PrecisionItems) / sizeof(PrecisionItems[0]), 1, 0, PrecisionItems, epd_bitmap_Precision, 32, 32);
  OptionOption4 = OptionMenu.add565("Refresh", Refresh, 0.0, sizeof(RefreshItems) / sizeof(RefreshItems[0]), 1, 0, RefreshItems, epd_bitmap_Update, 32, 32);

  // again all these calls are optional, but you most likely will want to set margins

  // optional but you can store a setting such as a calibration value in EEPROM, read at startup
  // and populate with SetItemValue(), even though the item data was set in the add method, you can change it later
  // SetItemValue(ItemID, ItemValue){

  // optional but can can set the title colors
  // setTitleColors(TitleTextColor, TitleFillColor);
  OptionMenu.setTitleColors(TITLE_TEXT, TITLE_BACK);

  // optional but you can set the size of the title bar
  // setTitleBarSize(TitleTop, TitleLeft, TitleWith, TitleHeight);
  OptionMenu.setTitleBarSize(0, 0, 320, 40);

  // optional but you can set the margins in how the text in the title bar is centered
  // setTitleTextMargins(LeftMargin, TopMargin);
  OptionMenu.setTitleTextMargins(60, 7);
  // set margins around the selector bar
  OptionMenu.setItemTextMargins(16, 10, 5);
  // optional but you can scoot the icon over and down
  // setIconMargins(LeftMargin, TopMargin);
  OptionMenu.setIconMargins(5, 0);

  // optional but you can set the margins and size of the text in the menu bar
  // setItemTextMargins(LeftMargin, TopMargin, MarginBetweenTitleBarAndMenu);
  OptionMenu.setItemTextMargins(7, 5, 10);

  // optional but you can change colors other that in the init method
  // colors such as disable text and border color (if you display a border of course)
  // setItemColors(DisableTextColor, selectorBorderColor, EditModeBorderColor);
  OptionMenu.setItemColors(MENU_DISABLE, MENU_HIGHBORDER, MENU_SELECTBORDER);

  ColorMenu.init(MENU_TEXT, MENU_BACKGROUND, MENU_HIGHLIGHTTEXT, MENU_HIGHLIGHT, MENU_SELECTTEXT, MENU_SELECT,
                 DATA_COLUMN - 10, 30, 5, "Color Menu", FONT_ITEM, FONT_TITLE);

  ColorOption1 = ColorMenu.addNI("Menu Text", 0, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption2 = ColorMenu.addNI("Background", 15, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption3 = ColorMenu.addNI("Select Text", 15, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption4 = ColorMenu.addNI("Select Bar", 16, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption5 = ColorMenu.addNI("Select Border", 17, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption6 = ColorMenu.addNI("Edit Text", 15, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption7 = ColorMenu.addNI("Edit Bar", 12, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption8 = ColorMenu.addNI("Edit Border", 4, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption9 = ColorMenu.addNI("Disable Text", 7, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption10 = ColorMenu.addNI("Voltage Text", 0, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption11 = ColorMenu.addNI("Banner Text", 15, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);
  ColorOption12 = ColorMenu.addNI("Banner", 1, 0, sizeof(C_NAMES) / sizeof(C_NAMES[0]), 1, 0, C_NAMES);

  // all these are optional, but you will most likely need to set the margins, the library will not look at text height and
  // row height and attempt to center
  ColorMenu.setTitleTextMargins(50, 10);
  ColorMenu.setItemTextMargins(16, 5, 5);
  ColorMenu.setMenuBarMargins(10, 305, 4, 2);

  // optional but showing how you can have several small items and not large pretty icons
  WirelessMenu.init(MENU_TEXT, MENU_BACKGROUND, MENU_HIGHLIGHTTEXT, MENU_HIGHLIGHT, MENU_SELECTTEXT, MENU_SELECT,
                    DATA_COLUMN, 35, 5, "Wireless Menu", FONT_SMALL, FONT_EDITTITLE);
  WirelessOption1 = WirelessMenu.addNI("Channel", 0, 0, 63, 1, 0);
  WirelessOption2 = WirelessMenu.addNI("Address", 0, 0, 255, 1, 0);
  WirelessOption3 = WirelessMenu.addNI("Data rate", 2, 0, sizeof(DataRateItems) / sizeof(DataRateItems[0]), 1, 0, DataRateItems);
  WirelessOption4 = WirelessMenu.addNI("Air rate", 2, 0, sizeof(DataRateItems) / sizeof(DataRateItems[0]), 1, 0, DataRateItems);
  WirelessOption5 = WirelessMenu.addNI("Error checking", 1, 0, sizeof(OffOnItems) / sizeof(OffOnItems[0]), 1, 0, OffOnItems);
  WirelessOption6 = WirelessMenu.addNI("Power", 0, 0, 100, 10, 0);
  WirelessOption7 = WirelessMenu.addNI("FEC", 0, 0, 100, 10, 0);
  WirelessOption8 = WirelessMenu.addNI("Callback", 1, 0, sizeof(OffOnItems) / sizeof(OffOnItems[0]), 1, 0, OffOnItems);
  WirelessOption9 = WirelessMenu.addNI("Use buffer", 1, 0, sizeof(OffOnItems) / sizeof(OffOnItems[0]), 1, 0, OffOnItems);
  WirelessOption10 = WirelessMenu.addNI("Open drain", 1, 0, sizeof(OffOnItems) / sizeof(OffOnItems[0]), 1, 0, OffOnItems);
  WirelessOption11 = WirelessMenu.addNI("Use pullups", 1, 0, sizeof(OffOnItems) / sizeof(OffOnItems[0]), 1, 0, OffOnItems);
  WirelessOption12 = WirelessMenu.addNI("Antenna height", 0, 0, 8, 1, 0);
  WirelessOption12 = WirelessMenu.addNI("Broadband", 1, 0, sizeof(OffOnItems) / sizeof(OffOnItems[0]), 1, 0, OffOnItems);

  // all these are optional, but you will most likely need to set the margins, the library will not look at text height and
  // row height and attempt to center
  WirelessMenu.setTitleTextMargins(50, 10);
  WirelessMenu.setItemTextMargins(16, 5, 5);
  WirelessMenu.setMenuBarMargins(10, 305, 4, 2);

  // I'm so not a fan on my API for setting select border color... this arguement should have been in the menubar thingy...
  // code is implemented in probably millions of projects around the world so no sense breaking them :)

  WirelessMenu.setItemColors(MENU_DISABLE, MENU_HIGHBORDER, MENU_SELECTBORDER);

  WirelessMenu.setTitleColors(TITLE_TEXT, TITLE_BACK);

  // optional but you can set the speed in which press and hold the up / down arrows increments the values
  // default is 50ms and while snappy, can be hard to stop on the desired value
  WirelessMenu.setIncrementDelay(150);

  DrawHeader();

  Update = 0;
}

void DrawHeader() {

  Display.fillScreen(MENU_BACKGROUND);
  Display.fillRect(0, 0, 320, 50, TITLE_BACK);
  Display.setFont(FONT_TITLE);
  Display.setTextColor(TITLE_TEXT, TITLE_BACK);
  Display.setCursor(10, 10);
  Display.print(F("Voltage"));

  // implement a real button...
  Display.fillRect(200, 5, 100, 40, ILI9341_RED);
  Display.drawRect(200, 5, 100, 40, ILI9341_WHITE);
  Display.setFont(FONT_ITEM);
  Display.setTextColor(ILI9341_WHITE, ILI9341_RED);
  Display.setCursor(210, 15);
  Display.print(F("Settings"));
}

void loop() {


  if (Update > RefreshTime) {

    Serial.print("Update ");
    Serial.print(Update);
    Serial.print(" Refresh ");
    Serial.println(Refresh);

    Update = 0;

    Bits = analogRead(A5);
    Volts = Bits * 3.3 / 1024;

    Display.fillRect(50, 100, 150, 40, MENU_BACKGROUND);
    Display.setFont(FONT_TITLE);
    Display.setTextColor(VOLT_TEXT, MENU_BACKGROUND);
    Display.setCursor(50, 100);
    if (Decimals == 0) {
      Display.print(Volts, 0);
    } else if (Decimals == 1) {
      Display.print(Volts, 1);
    } else if (Decimals == 2) {
      Display.print(Volts, 2);
    } else {
      Display.print(Volts, 3);
    }

    if (ShowUOM) {
      Display.print(" volts");
    }
  }

  if (Touch.touched()) {
    ProcessTouch();
    if ((BtnX > 260) && (BtnY < 40)) {
      // pressed "settings button"
      ProcessMainMenu();
      DrawHeader();
    }
  }
}

// function to process main menu iteraction
int ProcessMainMenu() {


  // the entire menu processing are basically 2 call

  // EditMenuOption = YourMenu.press(BtnX, BtnY); // process any screen press
  // YourMenu.drawRow(EditMenuOption); // draw the pressed row

  // set an inital flag that will be used to store what menu item the user exited on
  int MainMenuOption = 1;

  // blank out the screen
  Display.fillScreen(MENU_BACKGROUND);

  // draw the main menu
  MainMenu.draw();

  // run the processing loop until user move selector to title bar (which becomes exit)
  // and selectes it

  while (MainMenuOption != 0) {

    delay(50);
    // standard encoder read
    Position = myEnc.read();

    // attempt to debouce these darn things...
    if ((Position - oldPosition) > 0) {
      delay(DEBOUNCE);
      while (oldPosition != Position) {
        oldPosition = Position;
        Position = myEnc.read();
      }

      // once encoder calms down and is done cycling, move selector up
      // since encoder reads are increasing
      // any menu wrapping is handled in the library
      MainMenu.MoveUp();
    }

    // attempt to debouce these darn things...
    if ((Position - oldPosition) < 0) {
      delay(DEBOUNCE);
      while (oldPosition != Position) {
        oldPosition = Position;
        Position = myEnc.read();
      }
      // once encoder calms down and is done cycling, move selector up
      // since encoder reads are decreasing
      // any menu wrapping is handled in the library
      MainMenu.MoveDown();
    }

    // but wait...the user pressed the button on the encoder
    if (digitalRead(SE_PIN) == LOW) {

      // debounce the button press
      while (digitalRead(SE_PIN) == LOW) {
        delay(DEBOUNCE);
      }

      // get the row the selector is on
      MainMenuOption = MainMenu.selectRow();

      // here is where you process accordingly
      // remember on pressing button on title bar 0 is returned and will exit the loop

      if (MainMenuOption == MenuOption1) {
        // item 1 was the Option menu
        ProcessOptionMenu();
        // when done processing that menu, return here
        // clear display and redraw this main menu
        Display.fillScreen(MENU_BACKGROUND);
        MainMenu.draw();
      }
      if (MainMenuOption == MenuOption2) {
        ProcessColorMenu();
        Display.fillScreen(MENU_BACKGROUND);
        MainMenu.draw();
      }
      if (MainMenuOption == MenuOption3) {
        ProcessWirelessMenu();
        Display.fillScreen(MENU_BACKGROUND);
        MainMenu.draw();
      }

      if (MainMenuOption == MenuOption4) {
        //ImTooLazyToWriteAnotherExampe();
        Display.fillScreen(MENU_BACKGROUND);
        MainMenu.draw();
      }
    }
    // attempt to debouce these darn things...
    if (Touch.touched()) {

      ProcessTouch();

      MainMenuOption = ProcessButtonPress(MainMenu);
      Serial.println(MainMenuOption);

      if (MainMenuOption == MenuOption1) {
        // item 1 was the sensor menu
        ProcessOptionMenu();

        // when done processing that menu, return here
        // clear display and redraw this main menu
        Display.fillScreen(MENU_BACKGROUND);
        MainMenu.draw();
      }
      if (MainMenuOption == MenuOption2) {
        ProcessColorMenu();
        Display.fillScreen(MENU_BACKGROUND);
        MainMenu.draw();
      }
      if (MainMenuOption == MenuOption3) {
        // item 2 was the sensor menu
        ProcessWirelessMenu();
        // when done processing that menu, return here
        // clear display and redraw this main menu
        Display.fillScreen(MENU_BACKGROUND);
        MainMenu.draw();
      }
      if (MainMenuOption == MenuOption4) {
        //ImTooLazyToWriteAnotherExampe();
        Display.fillScreen(MENU_BACKGROUND);
        MainMenu.draw();
      }
    }
  }

  // at this point MenuOption better be 0...

  return MainMenuOption;
}

// menu to handle processing for a sub-menu
// since this menu will be a menu that allows edits (EditMenu object type)
// process is exactly the same as an ItemMenu
// meaning you simply use the same MoveUp, MoveDown and the library will know if you are
// wanting to move the selector or cycle through a range

void ProcessOptionMenu() {

  // processing edit menus is simple
  // after press and drawRow, the libray handles additioal presses for editing

  // 1. arrows to move menu up/down
  // 2. press menu item toggles edit mode on / off
  // 3. if toggled to edit, increments values up / down
  // basically a full edit capable menu with 2 calls :) ProcessWirelessMenu shows this


  // set an inital flag that will be used to store what menu item the user exited on
  int EditMenuOption = 1;

  // blank out the screen
  Display.fillScreen(MENU_BACKGROUND);

  // draw the main menu
  OptionMenu.draw();

  // run the processing loop until user move selector to title bar (which becomes exit)
  // and selectes it
  while (EditMenuOption != 0) {

    // standard encoder read
    Position = myEnc.read();

    // attempt to debouce these darn things...
    if ((Position - oldPosition) > 0) {
      delay(DEBOUNCE);
      while (oldPosition != Position) {
        oldPosition = Position;
        Position = myEnc.read();
      }
      OptionMenu.MoveUp();
    }

    if ((Position - oldPosition) < 0) {
      delay(DEBOUNCE);
      while (oldPosition != Position) {
        oldPosition = Position;
        Position = myEnc.read();
      }
      OptionMenu.MoveDown();
    }

    if (digitalRead(SE_PIN) == LOW) {
      // debounce the selector button
      while (digitalRead(SE_PIN) == LOW) {
        delay(DEBOUNCE);
      }
      EditMenuOption = OptionMenu.selectRow();
    }

    delay(100);
    // this next section is purely optional and shows how data change can be used
    // the EditMenu object type is special cased where if you select a menu item
    // the library consideres that a desire to start editing the item
    // the menu bar color changes and any MoveUp / MoveDown will then be directed
    // to editing the item value itself
    // once user Selects the selected row, the library will consider editign done
    // and restore menu selection with MoveUp / MoveDown
    // watch the YouTube video for a demo
    // to modify other values
    if (Touch.touched()) {

      ProcessTouch();

      // I elected to not put the drawRow in the press method
      // separate let's me test for press and only draw button once
      // this avoids flickering. however you must implement the
      // ProcessButtonPress(YourMenuObject); this function has drawRow built in it

      EditMenuOption = ProcessButtonPress(OptionMenu);
    }
  }

  // an example of how to set other menu values based on selection here
  // remember all menu values passed in or returned are floats
  // so recast to whatever you need to

  AllowColorMenu = (int)OptionMenu.value[OptionOption1];
  ShowUOM = (bool)OptionMenu.value[OptionOption2];
  Decimals = (int)OptionMenu.value[OptionOption3];
  Refresh = (byte)OptionMenu.value[OptionOption4];

  RefreshTime = RefreshTimeList[Refresh];

  if (AllowColorMenu == 0) {
    MainMenu.disable(MenuOption2);
  } else {
    MainMenu.enable(MenuOption2);
  }
}

void ProcessColorMenu() {


  // set an inital flag that will be used to store what menu item the user exited on
  int EditMenuOption = 1;

  // blank out the screen
  Display.fillScreen(MENU_BACKGROUND);

  // draw the main menu
  ColorMenu.draw();

  // run the processing loop until user move selector to title bar (which becomes exit)
  // and selectes it
  while (EditMenuOption != 0) {

    delay(100);

    if (Touch.touched()) {
      ProcessTouch();
      EditMenuOption = ProcessButtonPress(ColorMenu);
    }
  }

  // set global back color
  Serial.print("back color");
  Serial.println(C_VALUES[(int)ColorMenu.value[ColorOption2]]);

  // these are basic color settins, but meny will not update
  // you will need to call setItemColors or setAllColors to change them
  MENU_BACKGROUND = C_VALUES[(int)ColorMenu.value[ColorOption2]];
  VOLT_TEXT = C_VALUES[(int)ColorMenu.value[ColorOption10]];
  TITLE_TEXT = C_VALUES[(int)ColorMenu.value[ColorOption11]];
  TITLE_BACK = C_VALUES[(int)ColorMenu.value[ColorOption12]];
}

void ProcessWirelessMenu() {

  int WirelessMenuOption = 1;

  Display.fillScreen(MENU_BACKGROUND);

  WirelessMenu.draw();

  while (WirelessMenuOption != 0) {

    if (Touch.touched()) {

      ProcessTouch();  // gotta transform screen location to actual x-y
      // if you don't like my ProcessButtonPress function feel free to make native calls
      // first handle press, and if something returned
      // draw the row, drawRow will exit if you pass in a non valid value
      WirelessMenuOption = WirelessMenu.press(BtnX, BtnY);
      WirelessMenu.drawRow(WirelessMenuOption);
    }
  }
}


void ProcessTouch() {

  TouchPoint = Touch.getPoint();

  BtnX = TouchPoint.x;
  BtnY = TouchPoint.y;

  // consistency between displays is a mess...
  // this is some debug code to help show
  // where you pressed and the resulting map

  // Serial.print("real: ");
  // Serial.print(BtnX);
  // Serial.print(",");
  // Serial.print(BtnY);
  // Display.drawPixel(BtnX, BtnY, C_RED);

  // different values depending on where Touch happened

  // x  = map(x, real left, real right, 0, width-1);
  // y  = map(y, real bottom, real top, 0, height-1);

  // tft with black headers, yellow headers will be different
  BtnX = map(BtnX, 3700, 300, 319, 0);
  BtnY = map(BtnY, 3800, 280, 239, 0);

  // Serial.print(", Mapped: ");
  // Serial.print(BtnX);
  // Serial.print(",");
  // Serial.println(BtnY);
  // Display.fillCircle(BtnX, BtnY, 3, ILI9341_RED);
  // delay(5);
}

int ProcessButtonPress(ItemMenu &TheMenu) {
  int TheItem = 0, NewItem = 0;

  TheItem = TheMenu.press(BtnX, BtnY);

  Serial.print("TheItem ");
  Serial.println(TheItem);
  TheMenu.drawRow(TheItem, BUTTON_PRESSED);

  while (Touch.touched()) {
    ProcessTouch();
    delay(10);
    NewItem = TheMenu.press(BtnX, BtnY);
    Serial.print("NewItem ");
    Serial.println(NewItem);
    if (TheItem != NewItem) {
      TheMenu.drawRow(TheItem, BUTTON_NOTPRESSED);
      return -1;
    }
  }
  if (TheItem == NewItem) {
    TheMenu.drawRow(TheItem, BUTTON_NOTPRESSED);
    return TheItem;
  }
  return -1;
}

int ProcessButtonPress(EditMenu &TheMenu) {

  int TheItem = 0, NewItem = 0;

  TheItem = TheMenu.press(BtnX, BtnY);

  if (TheItem == -1) {
    return -1;
  }

  TheMenu.drawRow(TheItem);

  while (Touch.touched()) {
    delay(50);
    ProcessTouch();
    NewItem = TheMenu.press(BtnX, BtnY);
    //TheMenu.drawRow(NewItem);
    if (TheItem != NewItem) {

      TheMenu.drawRow(TheItem);

      return NewItem;
    }
  }
  if (TheItem == NewItem) {

    TheMenu.drawRow(TheItem);

    return TheItem;
  }
  delay(50);

  return TheItem;
}


/*

  list of methods and properties for ItemMenu object
  public:
  ItemMenu(ILI9341_t3 *Display, bool EnableTouch = false);
  // noting that EnableTouch is no longer used;

  void init(uint16_t TextColor, uint16_t BackgroundColor,
    uint16_t HighlightTextColor, uint16_t HighlightColor,
    uint16_t ItemRowHeight,uint16_t MaxRow,
    const char *TitleText, const ILI9341_t3_font_t &ItemFont, const ILI9341_t3_font_t &TitleFont);
  int addNI(const char *ItemLabel);
  int addMono(const char *ItemLabel, const unsigned char *Bitmap, uint8_t BitmapWidth, uint8_t BitmapHeight );
  int add565(const char *ItemLabel, const uint16_t *Bitmap, uint8_t BitmapWidth, uint8_t BitmapHeight);
  void draw();
  void MoveUp();
  void MoveDown();
  int selectRow();
  void setTitleColors(uint16_t TitleTextColor, uint16_t TitleFillColor);
  void setTitleBarSize(uint16_t TitleTop, uint16_t TitleLeft, uint16_t TitleWith, uint16_t TitleHeight);
  void setTitleText( char *TitleText,  char *ExitText);
  void setTitleTextMargins(uint16_t LeftMargin, uint16_t TopMargin);
  void setMenuBarMargins(uint16_t LeftMargin, uint16_t Width, byte BorderRadius, byte BorderThickness);
  void setItemColors( uint16_t DisableTextColor, uint16_t BorderColor);
  void setItemTextMargins(uint16_t LeftMargin, uint16_t TopMargin, uint16_t MenuMargin);
  void setItemText(int ItemID, const char *ItemText);
  void setIconMargins(uint16_t LeftMargin, uint16_t TopMargin);
  void disable(int ID);
  void enable(int ID);
  bool getEnableState(int ID);
  int press(int16_t ScreenX, int16_t ScreenY);
  void drawRow(int ID, uint8_t style);
  float value[MAX_OPT];
  int item;


  ////////////////////////////////////////

  list if methods and properties for EditMenu object

  public:

  EditMenu(ILI9341_t3 *Display,bool EnableTouch = false);
  void init(uint16_t TextColor, uint16_t BackgroundColor,
    uint16_t HighlightTextColor, uint16_t HighlightColor,
    uint16_t SelectedTextColor, uint16_t SelectedColor,
    uint16_t MenuColumn, uint16_t ItemRowHeight,uint16_t MaxRow,
    const char *TitleText, const ILI9341_t3_font_t &ItemFont, const ILI9341_t3_font_t &TitleFont);

  int addNI(const char *ItemText, float Data, float LowLimit, float HighLimit,
    float Increment, byte DecimalPlaces = 0, const char **ItemMenuText = NULL);

  int addMono(const char *ItemText, float Data, float LowLimit, float HighLimit,
    float Increment, byte DecimalPlaces = 0,const char **ItemMenuText = NULL,
    const unsigned char *Bitmap = nullptr, uint8_t BitmapWidth = 0, uint8_t BitmapHeight = 0);

  int add565(const char *ItemText, float Data, float LowLimit, float HighLimit,
    float Increment, byte DecimalPlaces = 0, const char **ItemMenuText = NULL,
    const uint16_t *Bitmap = nullptr, uint8_t BitmapWidth = 0, uint8_t BitmapHeight = 0);

  int selectRow();
  void draw();
  void MoveUp();
  void MoveDown();
  void setTitleColors(uint16_t TitleTextColor, uint16_t TitleFillColor);
  void setTitleBarSize(uint16_t TitleTop, uint16_t TitleLeft, uint16_t TitleWith, uint16_t TitleHeight);
  void setTitleText( char *TitleText,  char *ExitText);
  void setTitleTextMargins(uint16_t LeftMargin, uint16_t TopMargin);
  void setIncrementDelay(uint16_t Delay);
  void setMenuBarMargins(uint16_t LeftMargin, uint16_t Width, uint16_t BorderRadius, uint16_t BorderThickness);
  void setItemColors( uint16_t DisableTextColor, uint16_t BorderColor);
  void EditMenu::setAllColors(uint16_t TextColor, uint16_t BackgroundColor, 
							uint16_t HighlightTextColor, uint16_t HighlightColor, uint16_t HighlightBorderColor,
							uint16_t SelectedTextColor, uint16_t SelectedColor, uint16_t SelectBorderColor,
							uint16_t DisableTextColor ,	uint16_t TitleTextColor, uint16_t TitleFillColor){
  void setItemTextMargins(uint16_t LeftMargin, uint16_t TopMargin, uint16_t MenuMargin);
  void setItemText(int ItemID, const char *ItemText);
  void setIconMargins(uint16_t LeftMargin, uint16_t TopMargin);
  void SetItemValue(int ItemID, float ItemValue);
  void disable(int ID);
  void enable(int ID);
  bool getEnableState(int ID);
  int press(int16_t ScreenX, int16_t ScreenY);
  void drawRow(int ID);
  float value[MAX_OPT];
  int item;



*/

